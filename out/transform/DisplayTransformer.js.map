{"version":3,"file":"DisplayTransformer.js","names":["_nodeOpcua","require","_gulplog","_interopRequireDefault","_modifyXml","_semver","_ConfigTransformer","e","__esModule","default","ownKeys","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","call","TypeError","String","Number","rootMetaTags","tag","key","DisplayTransformer","ConfigTransformer","extension","scriptSourceExtension","sourceExtensions","shouldBeTransformed","node","hasTypeDefinition","normalizeScriptAttributes","attributes","src","name","undefined","mimeType","type","transformFromDB","context","xml","decodeContents","Error","document","findChild","config","scripts","scriptTags","removeChildren","inlineScript","element","additional","textContent","Logger","warn","nodeId","script","attributeValues","normalized","id","startsWith","childNodes","scriptFile","constructor","splitFile","scriptText","dataType","DataType","arrayType","VariantArrayType","Scalar","addNode","metaTag","paramTags","parameters","n","sortedAttributeValues","firstScript","hasValues","values","findIndex","v","pop","writeConfigFile","svgFile","encodeContents","scriptTagAttributes","entries","reduce","soFar","outputKey","combineNodes","sources","_config$scripts$filte","_config$scripts","configFile","JSON","parse","stringValue","relative","message","result","svg","dependencies","linkedScriptsSupported","gte","atserverVersion","referencedScripts","map","s","addReferencedScripts","appendChild","createElement","createCDataNode","prependChild","reverse","createTextNode","exports"],"sources":["../../src/transform/DisplayTransformer.ts"],"sourcesContent":["import { DataType, VariantArrayType } from 'node-opcua';\r\nimport Logger from 'gulplog';\r\nimport {\r\n  findChild,\r\n  removeChildren,\r\n  createCDataNode,\r\n  createElement,\r\n  appendChild,\r\n  prependChild,\r\n  textContent,\r\n  createTextNode,\r\n  attributeValues,\r\n  AttributeValues,\r\n} from 'modify-xml';\r\nimport { gte } from 'semver';\r\nimport ConfigTransformer from '../lib/transform/ConfigTransformer';\r\nimport type { DisplayConfig } from '../../types/schemas/display-config';\r\nimport { BrowsedNode } from '../lib/server/NodeBrowser';\r\nimport { SplittingTransformer } from '..';\r\n\r\nconst rootMetaTags = [{ tag: 'title' }, { tag: 'desc', key: 'description' }];\r\n\r\n/**\r\n * Splits read atvise display XML nodes into their SVG and JavaScript sources,\r\n * alongside with a .json file containing the display's parameters.\r\n */\r\nexport default class DisplayTransformer extends ConfigTransformer<DisplayConfig> {\r\n  /**\r\n   * The extension to add to display container node names when they are pulled.\r\n   * @type {string}\r\n   */\r\n  static get extension() {\r\n    return '.display';\r\n  }\r\n\r\n  /**\r\n   * The source file extension to allow for scripts.\r\n   */\r\n  static get scriptSourceExtension() {\r\n    return '.js';\r\n  }\r\n\r\n  /**\r\n   * The source file extensions to allow.\r\n   * @type {string[]}\r\n   */\r\n  static get sourceExtensions() {\r\n    return ['.json', '.svg', this.scriptSourceExtension];\r\n  }\r\n\r\n  /**\r\n   * Returns `true` for all display nodes.\r\n   * @param {Node} node The node to check.\r\n   */\r\n  shouldBeTransformed(node) {\r\n    return node.hasTypeDefinition('VariableTypes.ATVISE.Display');\r\n  }\r\n\r\n  private normalizeScriptAttributes(\r\n    attributes: AttributeValues\r\n  ): Omit<DisplayConfig['scripts'][0], 'type'> {\r\n    return {\r\n      src: attributes['atv:href'] || attributes['xlink:href'] || attributes.src,\r\n      name: attributes['atv:name'] || undefined,\r\n      mimeType: attributes.type !== 'text/ecmascript' ? attributes.type : undefined,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Splits any read files containing atvise displays into their SVG and JavaScript sources,\r\n   * alongside with a json file containing the display's parameters.\r\n   * @param node The node to split.\r\n   * @param context The transform context.\r\n   */\r\n  async transformFromDB(\r\n    node: BrowsedNode,\r\n    context: { remove: () => void; addNode: (add: BrowsedNode) => void }\r\n  ) {\r\n    if (!this.shouldBeTransformed(node)) {\r\n      return undefined;\r\n    }\r\n\r\n    const xml = this.decodeContents(node);\r\n    if (!xml) {\r\n      throw new Error('Error parsing display');\r\n    }\r\n\r\n    const document = findChild(xml, 'svg');\r\n    if (!document) {\r\n      throw new Error('Error parsing display: No `svg` tag');\r\n    }\r\n\r\n    const config: DisplayConfig = { scripts: [] };\r\n    const scriptTags = removeChildren(document, 'script');\r\n    let inlineScript;\r\n\r\n    rootMetaTags.forEach(({ tag, key }) => {\r\n      const [element, ...additional] = removeChildren(document, tag);\r\n      if (!element) return;\r\n\r\n      config[key || tag] = textContent(element);\r\n\r\n      if (additional.length) {\r\n        Logger.warn(`Removed additional <${tag} /> element inside ${node.nodeId}`);\r\n      }\r\n    });\r\n\r\n    // Extract JavaScript\r\n    if (scriptTags.length) {\r\n      scriptTags.forEach((script) => {\r\n        const attributes = attributeValues(script);\r\n        const normalized = this.normalizeScriptAttributes(attributes);\r\n\r\n        if (attributes?.['atv:href']) {\r\n          // Linked scripts\r\n          config.scripts.push({\r\n            type: 'linked',\r\n            ...(normalized as { src: string }),\r\n          });\r\n        } else if (attributes?.src || attributes?.['xlink:href']) {\r\n          // Referenced scripts\r\n          config.scripts.push({\r\n            type: 'referenced',\r\n            ...(normalized as { src: string }),\r\n          });\r\n        } else if (inlineScript) {\r\n          // Warn on multiple inline scripts\r\n          Logger[node.id.value.startsWith('SYSTEM.LIBRARY.ATVISE') ? 'debug' : 'warn'](\r\n            `'${node.id.value}' contains multiple inline scripts.`\r\n          );\r\n          document.childNodes.push(inlineScript);\r\n        } else if (textContent(script)) {\r\n          // Inline script\r\n          config.scripts.push({\r\n            type: 'inline',\r\n            ...normalized,\r\n          });\r\n          inlineScript = script;\r\n        }\r\n      });\r\n    }\r\n\r\n    if (inlineScript) {\r\n      const scriptFile = (this.constructor as typeof SplittingTransformer).splitFile(node, '.js');\r\n      const scriptText = textContent(inlineScript);\r\n\r\n      scriptFile.value = {\r\n        dataType: DataType.String,\r\n        arrayType: VariantArrayType.Scalar,\r\n        value: scriptText,\r\n      };\r\n      context.addNode(scriptFile);\r\n    }\r\n\r\n    // Extract metadata\r\n    const metaTag = findChild(document, 'metadata');\r\n    if (metaTag && metaTag.childNodes) {\r\n      // TODO: Warn on multiple metadata tags\r\n\r\n      // - Parameters\r\n      const paramTags = removeChildren(metaTag, 'atv:parameter');\r\n      if (paramTags.length) {\r\n        config.parameters = [];\r\n\r\n        paramTags.forEach((n) =>\r\n          config.parameters.push(this.sortedAttributeValues(n) as DisplayConfig['parameters'][0])\r\n        );\r\n      }\r\n    }\r\n\r\n    // Remove empty config values\r\n    // - Remove inline script config if it's the only script\r\n    //   FIXME: Add option to disable this\r\n    const [firstScript] = config.scripts;\r\n    if (config.scripts.length === 1 && firstScript.type === 'inline') {\r\n      const hasValues = ~Object.values({ ...firstScript, type: undefined }).findIndex((v) => v);\r\n\r\n      if (!hasValues) {\r\n        config.scripts.pop();\r\n      }\r\n    }\r\n\r\n    // Remove empty scripts array\r\n    if (!config.scripts.length) delete config.scripts;\r\n\r\n    // Write files\r\n    this.writeConfigFile(config, node, context);\r\n\r\n    const svgFile = (this.constructor as typeof SplittingTransformer).splitFile(node, '.svg');\r\n    svgFile.value = {\r\n      dataType: DataType.String,\r\n      arrayType: VariantArrayType.Scalar,\r\n      value: this.encodeContents(xml),\r\n    };\r\n    context.addNode(svgFile);\r\n\r\n    // equals: node.renameTo(`${node.name}.display`);\r\n    return super.transformFromDB(node, context);\r\n  }\r\n\r\n  scriptTagAttributes(config: Partial<DisplayConfig['scripts'][0]> & { src: string }) {\r\n    return Object.entries(config).reduce(\r\n      (soFar, [key, value]) => {\r\n        let outputKey;\r\n\r\n        if (key === 'mimeType') outputKey = 'type';\r\n        if (key === 'src') outputKey = config.type === 'referenced' ? 'xlink:href' : 'atv:href';\r\n\r\n        return { ...soFar, [outputKey || `atv:${key}`]: value };\r\n      },\r\n      {\r\n        type: 'text/ecmascript',\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Creates a display from the collected nodes.\r\n   * @param {BrowsedNode} node The container node.\r\n   * @param {Map<string, BrowsedNode>} sources The collected files, stored against their\r\n   * extension.\r\n   * @param context The current transform context.\r\n   */\r\n  combineNodes(node, sources, context) {\r\n    const configFile = sources['.json'];\r\n    let config: DisplayConfig = {};\r\n\r\n    if (configFile) {\r\n      try {\r\n        config = JSON.parse(configFile.stringValue);\r\n      } catch (e) {\r\n        throw new Error(`Error parsing JSON in ${configFile.relative}: ${e.message}`);\r\n      }\r\n    }\r\n\r\n    const svgFile = sources['.svg'];\r\n    if (!svgFile) {\r\n      throw new Error(`No display SVG for ${node.nodeId}`);\r\n    }\r\n\r\n    const scriptFile =\r\n      sources[(this.constructor as typeof DisplayTransformer).scriptSourceExtension];\r\n    let inlineScript = '';\r\n    if (scriptFile) {\r\n      inlineScript = scriptFile.stringValue;\r\n    }\r\n\r\n    const xml = this.decodeContents(svgFile);\r\n    const result = xml;\r\n    const svg = findChild(result, 'svg');\r\n\r\n    if (!svg) {\r\n      throw new Error('Error parsing display SVG: No `svg` tag');\r\n    }\r\n\r\n    if (config.dependencies && config.scripts) {\r\n      throw new Error(`Cannot use both 'dependencies' and 'scripts'`);\r\n    }\r\n\r\n    const linkedScriptsSupported = gte(context.atserverVersion, '3.5.0');\r\n\r\n    const referencedScripts = config.dependencies\r\n      ? config.dependencies.map((src) => ({ src }))\r\n      : config.scripts?.filter((s) => s.type === 'referenced') ?? [];\r\n\r\n    const addReferencedScripts = () =>\r\n      referencedScripts.forEach((s) => {\r\n        appendChild(svg, createElement('script', undefined, this.scriptTagAttributes(s)));\r\n      });\r\n\r\n    // Insert linked scripts\r\n\r\n    if (config.scripts) {\r\n      config.scripts.forEach((s) => {\r\n        if (s.type === 'linked') {\r\n          if (!linkedScriptsSupported) {\r\n            // FIXME: Add possibility to ignore this error (and do what? :) )\r\n            throw new Error(`Linked scripts are only supported on atserver 3.5 and later`);\r\n          }\r\n\r\n          appendChild(svg, createElement('script', undefined, this.scriptTagAttributes(s)));\r\n        }\r\n      });\r\n    }\r\n\r\n    // Insert dependencies\r\n\r\n    // On atserver < 3.5 insert dependencies before the inline script\r\n    if (!linkedScriptsSupported) {\r\n      addReferencedScripts();\r\n    }\r\n\r\n    // Insert inline script\r\n    // NOTE: Import order is not preserved on atserver < 3.5\r\n    if (scriptFile) {\r\n      appendChild(\r\n        svg,\r\n        createElement('script', [createCDataNode(inlineScript)], {\r\n          type: 'text/ecmascript',\r\n        })\r\n      );\r\n    }\r\n\r\n    // Insert referenced scripts after inline scripts in atserver 3.5+\r\n\r\n    if (linkedScriptsSupported) {\r\n      addReferencedScripts();\r\n    }\r\n\r\n    // Insert metadata\r\n    // - Parameters\r\n    if (config.parameters && config.parameters.length > 0) {\r\n      let [metaTag] = removeChildren(svg, 'metadata');\r\n\r\n      // FIXME: Warn on multiple metadata tags\r\n\r\n      if (!metaTag) {\r\n        metaTag = createElement('metadata');\r\n      }\r\n\r\n      // Parameters should come before other atv attributes, e.g. `atv:gridconfig`\r\n      for (let i = config.parameters.length - 1; i >= 0; i--) {\r\n        prependChild(\r\n          metaTag,\r\n          createElement('atv:parameter', undefined, config.parameters[i] as AttributeValues)\r\n        );\r\n      }\r\n\r\n      // Insert <metadata> as first element in the resulting svg, after <defs>, <desc> and\r\n      // <title> if defined (nothing to do, they are ordered inside #encodeContents)\r\n      prependChild(svg, metaTag);\r\n    }\r\n\r\n    // - Title and description\r\n    rootMetaTags.reverse().forEach(({ tag, key }) => {\r\n      const value = config[key || tag] as string;\r\n\r\n      if (value !== undefined) {\r\n        prependChild(svg, createElement(tag, [createTextNode(value)]));\r\n      }\r\n    });\r\n\r\n    // eslint-disable-next-line\r\n    node.value.value = this.encodeContents(result);\r\n    return node;\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]}