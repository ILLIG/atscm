{"version":3,"file":"ScriptTransformer.js","names":["_gulplog","_interopRequireDefault","require","_nodeOpcua","_modifyXml","_ConfigTransformer","e","__esModule","default","_objectWithoutProperties","t","o","r","i","_objectWithoutPropertiesLoose","Object","getOwnPropertySymbols","n","length","indexOf","propertyIsEnumerable","call","hasOwnProperty","ownKeys","keys","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","_toPrimitive","Symbol","toPrimitive","TypeError","String","Number","AtviseScriptTransformer","ConfigTransformer","scriptSourceExtension","sourceExtensions","processMetadata","document","config","metaTag","findChild","childNodes","child","_textContent","_textContent2","type","name","icon","assign","content","textContent","attributeValues","visible","Boolean","parseInt","title","undefined","description","trim","metadata","soFar","Array","isArray","includes","Logger","debug","processParameters","paramTags","findChildren","map","node","attributes","sortedAttributeValues","param","relative","target","find","isElement","index","tagName","parsedIndex","namespaceIndex","isNaN","transformFromDB","context","shouldBeTransformed","arrayType","VariantArrayType","Scalar","Error","warn","id","remove","xml","decodeContents","parameters","writeConfigFile","codeNode","scriptFile","constructor","splitFile","dataType","DataType","addNode","combineNodes","sources","_config$metadata","configFile","JSON","parse","stringValue","message","code","createElement","result","meta","isDisplayScript","isScript","priority","createTextNode","isQuickDynamic","_config$icon","iconConfig","entries","v","prependChild","elements","targetElements","appendChild","createCDataNode","encodeContents","exports","ServerscriptTransformer","extension","isVariable","QuickDynamicTransformer","DisplayScriptTransformer"],"sources":["../../src/transform/ScriptTransformer.ts"],"sourcesContent":["import Logger from 'gulplog';\r\nimport { DataType, VariantArrayType } from 'node-opcua';\r\nimport {\r\n  findChild,\r\n  findChildren,\r\n  textContent,\r\n  createElement,\r\n  createTextNode,\r\n  createCDataNode,\r\n  prependChild,\r\n  appendChild,\r\n  isElement,\r\n  attributeValues,\r\n  AttributeValues,\r\n} from 'modify-xml';\r\nimport ConfigTransformer from '../lib/transform/ConfigTransformer';\r\nimport type SplittingTransformer from '../lib/transform/SplittingTransformer';\r\nimport type { ServerscriptConfig } from '../../types/schemas/serverscript-config';\r\n\r\n/**\r\n * A transformer that splits atvise scripts and quick dynamics into a code file and a .json file\r\n * containing parameters and metadata.\r\n */\r\nexport class AtviseScriptTransformer extends ConfigTransformer<ServerscriptConfig> {\r\n  /**\r\n   * The source file extension to allow for scripts.\r\n   */\r\n  static get scriptSourceExtension() {\r\n    return '.js';\r\n  }\r\n\r\n  /**\r\n   * The source file extensions to allow.\r\n   * @type {string[]}\r\n   */\r\n  static get sourceExtensions() {\r\n    return ['.json', this.scriptSourceExtension];\r\n  }\r\n\r\n  /**\r\n   * Extracts a script's metadata.\r\n   * @param {Object} document The parsed xml document to process.\r\n   * @return {Object} The metadata found.\r\n   */\r\n  processMetadata(document) {\r\n    const config: ServerscriptConfig = {};\r\n\r\n    const metaTag = findChild(document, 'metadata');\r\n    // console.error('Meta', metaTag);\r\n    if (!metaTag || !metaTag.childNodes) {\r\n      return config;\r\n    }\r\n\r\n    metaTag.childNodes.forEach((child) => {\r\n      if (child.type !== 'element') {\r\n        return;\r\n      }\r\n\r\n      switch (child.name) {\r\n        case 'icon':\r\n          config.icon = Object.assign(\r\n            {\r\n              content: textContent(child) || '',\r\n            },\r\n            attributeValues(child) as { [name: string]: string } & { type: string }\r\n          );\r\n          break;\r\n        case 'visible':\r\n          config.visible = Boolean(parseInt(textContent(child) || '1', 10));\r\n          break;\r\n        case 'title':\r\n          config.title = textContent(child) ?? undefined;\r\n          break;\r\n        case 'description':\r\n          config.description = textContent(child) ?? undefined;\r\n          break;\r\n        default: {\r\n          const value = textContent(child)!;\r\n\r\n          // Priority 0 is added to all display scripts by default (atserver 3.5)\r\n          if (child.name === 'priority' && value.trim() === '0') break;\r\n\r\n          if (!config.metadata) {\r\n            config.metadata = {};\r\n          }\r\n\r\n          if (config.metadata[child.name]) {\r\n            const soFar = config.metadata[child.name];\r\n            if (!Array.isArray(soFar)) {\r\n              config.metadata[child.name] = [soFar];\r\n            }\r\n\r\n            (config.metadata[child.name] as string[]).push(value);\r\n          } else {\r\n            config.metadata[child.name] = value;\r\n          }\r\n\r\n          if (!['longrunning', 'priority'].includes(child.name)) {\r\n            Logger.debug(`Generic metadata element '${child.name}'`); // FIXME:  at ${node.nodeId}\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    });\r\n\r\n    return config;\r\n  }\r\n\r\n  /**\r\n   * Extracts a script's parameters.\r\n   * @param {Object} document The parsed xml document to process.\r\n   * @return {Object[]} The parameters found.\r\n   */\r\n  processParameters(document) {\r\n    const paramTags = findChildren(document, 'parameter');\r\n    if (!paramTags?.length) {\r\n      return undefined;\r\n    }\r\n\r\n    return paramTags.map((node) => {\r\n      const { childNodes } = node;\r\n      const attributes = this.sortedAttributeValues(node);\r\n      const param = Object.assign({}, attributes) as ServerscriptConfig['parameters'][0];\r\n\r\n      // Handle relative parameter targets\r\n      if (attributes.relative === 'true') {\r\n        const target = findChild(childNodes.find(isElement), [\r\n          'Elements',\r\n          'RelativePathElement',\r\n          'TargetName',\r\n        ]);\r\n\r\n        if (target) {\r\n          const [index, name] = ['NamespaceIndex', 'Name'].map((tagName) =>\r\n            textContent(findChild(target, tagName))\r\n          );\r\n\r\n          const parsedIndex = parseInt(index, 10);\r\n\r\n          param.target = { namespaceIndex: isNaN(parsedIndex) ? 1 : parsedIndex, name: name || '' };\r\n        }\r\n      }\r\n\r\n      return param;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Splits a node into multiple source nodes.\r\n   * @param {Node} node A server node.\r\n   * @param {Object} context The current transform context.\r\n   */\r\n  async transformFromDB(node, context) {\r\n    if (!this.shouldBeTransformed(node)) {\r\n      return undefined;\r\n    }\r\n\r\n    if (node.arrayType !== VariantArrayType.Scalar) {\r\n      // FIXME: Instead of throwing we could simply pass the original node to the callback\r\n      throw new Error('Array of scripts not supported');\r\n    }\r\n\r\n    // If scripts are empty (e.g. created by atvise builder, but never edited) we display a warning and ignore them.\r\n    if (!node.value.value) {\r\n      Logger.warn(`The script '${node.id.value}' is empty, skipping...`);\r\n      return context.remove(node);\r\n    }\r\n\r\n    const xml = this.decodeContents(node);\r\n    if (!xml) {\r\n      throw new Error('Error parsing script');\r\n    }\r\n\r\n    const document = findChild(xml, 'script');\r\n    if (!document) {\r\n      throw new Error(`Empty document at ${node.id.value}`);\r\n    }\r\n\r\n    // Extract metadata and parameters\r\n    const config = {\r\n      ...this.processMetadata(document),\r\n      parameters: this.processParameters(document),\r\n    };\r\n\r\n    // Write config file\r\n    this.writeConfigFile(config, node, context);\r\n\r\n    // Write JavaScript file\r\n    const codeNode = findChild(document, 'code');\r\n    const scriptFile = (this.constructor as typeof SplittingTransformer).splitFile(node, '.js');\r\n    scriptFile.value = {\r\n      dataType: DataType.String,\r\n      arrayType: VariantArrayType.Scalar,\r\n      value: textContent(codeNode) || '',\r\n    };\r\n    context.addNode(scriptFile);\r\n\r\n    return super.transformFromDB(node, context);\r\n  }\r\n\r\n  /**\r\n   * Inlines the passed source nodes to the given container node.\r\n   * @param {Node} node The container node.\r\n   * @param {{ [ext: string]: Node }} sources The source nodes to inline.\r\n   */\r\n  combineNodes(node, sources) {\r\n    const configFile = sources['.json'];\r\n    let config: ServerscriptConfig = {};\r\n\r\n    if (configFile) {\r\n      try {\r\n        config = JSON.parse(configFile.stringValue);\r\n      } catch (e) {\r\n        throw new Error(`Error parsing JSON in ${configFile.relative}: ${e.message}`);\r\n      }\r\n    }\r\n\r\n    const scriptFile =\r\n      sources[(this.constructor as typeof AtviseScriptTransformer).scriptSourceExtension];\r\n    let code = '';\r\n\r\n    if (scriptFile) {\r\n      code = scriptFile.stringValue;\r\n    }\r\n\r\n    const document = createElement('script', []);\r\n\r\n    const result = {\r\n      childNodes: [\r\n        { type: 'directive', value: '<?xml version=\"1.0\" encoding=\"UTF-8\"?>' },\r\n        document,\r\n      ],\r\n    };\r\n\r\n    // Insert metadata\r\n    const meta = [];\r\n\r\n    if ((node.isDisplayScript || node.isScript) && !config.metadata?.priority) {\r\n      meta.push(createElement('priority', [createTextNode('0')]));\r\n    }\r\n\r\n    if (node.isQuickDynamic) {\r\n      // - Icon\r\n      if (config.icon) {\r\n        const { content, ...iconConfig } = config.icon;\r\n\r\n        meta.push(createElement('icon', [createTextNode(content)], iconConfig as AttributeValues));\r\n      }\r\n\r\n      // - Other fields\r\n      if (config.visible !== undefined) {\r\n        meta.push(createElement('visible', [createTextNode(`${config.visible ? 1 : 0}`)]));\r\n      }\r\n\r\n      if (config.title !== undefined) {\r\n        meta.push(createElement('title', [createTextNode(config.title)]));\r\n      }\r\n\r\n      if (config.description !== undefined) {\r\n        meta.push(createElement('description', [createTextNode(config.description)]));\r\n      }\r\n    }\r\n\r\n    // - Additional fields\r\n    if (config.metadata !== undefined) {\r\n      Object.entries(config.metadata).forEach(([name, value]) => {\r\n        (Array.isArray(value) ? value : [value]).forEach((v) =>\r\n          meta.push(createElement(name, [createTextNode(v)]))\r\n        );\r\n      });\r\n    }\r\n\r\n    if (node.isQuickDynamic || meta.length) {\r\n      prependChild(document, createElement('metadata', meta));\r\n    }\r\n\r\n    // Insert parameters\r\n    if (config.parameters) {\r\n      config.parameters.forEach((attributes) => {\r\n        let elements;\r\n\r\n        // Handle relative parameter targets\r\n        if (attributes.relative === 'true') {\r\n          const { namespaceIndex, name } = attributes.target || {};\r\n          const targetElements = createElement('Elements');\r\n\r\n          elements = [createElement('RelativePath', [targetElements])];\r\n\r\n          if (name !== undefined) {\r\n            targetElements.childNodes = [\r\n              createElement('RelativePathElement', [\r\n                createElement('TargetName', [\r\n                  createElement('NamespaceIndex', [createTextNode(`${namespaceIndex}`)]),\r\n                  createElement('Name', [createTextNode(`${name}`)]),\r\n                ]),\r\n              ]),\r\n            ];\r\n          }\r\n\r\n          // eslint-disable-next-line no-param-reassign\r\n          delete attributes.target;\r\n        }\r\n\r\n        appendChild(document, createElement('parameter', elements, attributes as AttributeValues));\r\n      });\r\n    }\r\n\r\n    // Insert script code\r\n    appendChild(document, createElement('code', [createCDataNode(code)]));\r\n\r\n    // eslint-disable-next-line no-param-reassign\r\n    node.value.value = this.encodeContents(result);\r\n  }\r\n}\r\n\r\n/**\r\n * A transformer that splits atvise server scripts into multiple files.\r\n */\r\nexport class ServerscriptTransformer extends AtviseScriptTransformer {\r\n  /** The container's extension. */\r\n  static get extension() {\r\n    return '.script';\r\n  }\r\n\r\n  /**\r\n   * Returns `true` for all script nodes.\r\n   * @param {Node} node The node to check.\r\n   * @return {boolean} If the node is a server script.\r\n   */\r\n  shouldBeTransformed(node) {\r\n    return node.isVariable && node.isScript;\r\n  }\r\n}\r\n\r\n/**\r\n * A transformer that splits atvise quickdynamics into multiple files.\r\n */\r\nexport class QuickDynamicTransformer extends AtviseScriptTransformer {\r\n  /** The container's extension. */\r\n  static get extension() {\r\n    return '.qd';\r\n  }\r\n\r\n  /**\r\n   * Returns `true` for all nodes containing quick dynamics.\r\n   * @param {Node} node The node to check.\r\n   * @return {boolean} If the node is a quick dynamic.\r\n   */\r\n  shouldBeTransformed(node) {\r\n    return node.isVariable && node.isQuickDynamic;\r\n  }\r\n}\r\n\r\nexport class DisplayScriptTransformer extends AtviseScriptTransformer {\r\n  /** The container's extension. */\r\n  static get extension() {\r\n    return '.ds';\r\n  }\r\n\r\n  /**\r\n   * Returns `true` for all nodes containing quick dynamics.\r\n   * @param {Node} node The node to check.\r\n   * @return {boolean} If the node is a quick dynamic.\r\n   */\r\n  shouldBeTransformed(node) {\r\n    return node.isVariable && node.isDisplayScript;\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]}