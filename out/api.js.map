{"version":3,"file":"api.js","names":["_Session","_interopRequireDefault","require","_NodeId","_nodeOpcua","e","__esModule","default","promisifiedCallback","resolve","reject","err","result","promisified","call","Promise","withSession","action","error","session","global","atscmSession","Session","create","etes","readNode","nodeId","cb","readVariableValue","then","value","statusCode","StatusCodes","Good","Object","assign","Error","description","writeNode","writeSingleNode","callMethod","methodId","args","objectId","parent","inputArguments","callScript","scriptId","parameters","NodeId","dataType","DataType","String","arrayType","VariantArrayType","Array","keys","Variant","values","outputArguments","createNode","name","parentNodeId","nodeClass","NodeClass","Variable","typeDefinition","modellingRule","reference","variableOptions","valueRank","Scalar","from","is64Bit","Int64","UInt64","paramObjString","JSON","stringify","browseName","createdNode","console","warn","addReferences","references","entries","map","type","items","referenceIdValue","parseInt"],"sources":["../src/api.js"],"sourcesContent":["\r\nimport Session from './lib/server/Session';\r\nimport NodeId from './lib/model/opcua/NodeId';\r\nimport { DataType, NodeClass, StatusCodes, VariantArrayType } from 'node-opcua';\r\n\r\n// Helpers\r\n/**\r\n * Creates a callback that calls `resolve` on success and `reject` on error.\r\n * @param {function(result: any): void} resolve The resolve callback.\r\n * @param {function(error: Error): void} reject The reject callback.\r\n * @example\r\n * // `aCallbackFn` is a function that accepts a node-style callback as the last argument\r\n * const promise = new Promise(\r\n *   (resolve, reject) => aCallbackFn('other', 'args', promisifiedCallback(resolve, reject)\r\n * );\r\n */\r\nfunction promisifiedCallback(resolve, reject) {\r\n  return (err, result) => {\r\n    if (err) {\r\n      return reject(err);\r\n    }\r\n    return resolve(result);\r\n  };\r\n}\r\n\r\n/**\r\n * Promisifies a async function that would otherwise require a callback.\r\n * @param {function(cb: function(error: Error, result: any)):Promise<any>} call A function that\r\n * accepts a callback and performs the async action to wrap.\r\n */\r\nfunction promisified(call) {\r\n  return new Promise((resolve, reject) => call(promisifiedCallback(resolve, reject)));\r\n}\r\n\r\n/**\r\n * Creates a session, runs `action` and closes the session.\r\n * @param {function(session: Session): Promise<any>} action The action to run a session.\r\n */\r\nasync function withSession(action) {\r\n  let result = null;\r\n  let error = null;\r\n  let session;\r\n  \r\n  if (global.atscmSession) {\r\n    session = global.atscmSession;\r\n  } else {\r\n    session = await Session.default.create();\r\n    global.atscmSession = session;\r\n  }\r\n\r\n  try {\r\n    result = await action(session);\r\n  } catch (e) {\r\n    error = e;\r\n  }\r\n\r\n  if (error) {\r\n    throw etes;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n// Reading/Writing\r\n\r\n/**\r\n * Reads a single node's value.\r\n * @param {NodeId} nodeId The node to read.\r\n * @return {Promise<any>} The read value.\r\n */\r\nexport async function readNode(nodeId) {\r\n  return withSession((session) => promisified((cb) => session.readVariableValue(nodeId, cb))).then(\r\n    ({ value, statusCode }) => {\r\n      if (statusCode !== StatusCodes.Good) {\r\n        throw Object.assign(new Error(statusCode.description), { nodeId, statusCode });\r\n      }\r\n\r\n      return value;\r\n    }\r\n  );\r\n}\r\n\r\n/**\r\n * Writes a single node's value.\r\n * @param {NodeId} nodeId The node to write.\r\n * @param {Variant} value The value to write.\r\n * @return {Promise<node-opcua~StatusCodes} The operation status result.\r\n */\r\nexport function writeNode(nodeId, value) {\r\n  return withSession((session) =>\r\n    promisified((cb) => session.writeSingleNode(nodeId, value, cb))\r\n  ).then((statusCode) => {\r\n    if (statusCode !== StatusCodes.Good) {\r\n      throw Object.assign(new Error(statusCode.description), { nodeId, statusCode });\r\n    }\r\n\r\n    return statusCode;\r\n  });\r\n}\r\n\r\n// Methods / Scripts\r\n\r\n/**\r\n * Calls an OPC-UA method on the server.\r\n * @param {NodeId} methodId The method's id.\r\n * @param {Array<Variant>} args The arguments to pass.\r\n */\r\nexport function callMethod(methodId, args = []) {\r\n  return withSession((session) =>\r\n    promisified((cb) =>\r\n      session.call(\r\n        [\r\n          {\r\n            objectId: methodId.parent,\r\n            methodId,\r\n            inputArguments: args,\r\n          },\r\n        ],\r\n        cb\r\n      )\r\n    )\r\n  ).then(([result] = []) => {\r\n    if (result.statusCode.value) {\r\n      throw Object.assign(new Error(result.statusCode.description), {\r\n        methodId,\r\n        inputArguments: args,\r\n      });\r\n    }\r\n\r\n    return result;\r\n  });\r\n}\r\n\r\n/**\r\n * Calls a server script on the server.\r\n * @param {NodeId} scriptId The script's id.\r\n * @param {Object} parameters The parameters to pass, given as a map of Variants, like\r\n * `{ name: { ... } }`.\r\n */\r\nexport function callScript(scriptId, parameters = {}) {\r\n  return callMethod(new NodeId('AGENT.SCRIPT.METHODS.callScript'), [\r\n    {\r\n      dataType: DataType.NodeId,\r\n      value: scriptId,\r\n    },\r\n    {\r\n      dataType: DataType.NodeId,\r\n      value: scriptId.parent,\r\n    },\r\n    {\r\n      dataType: DataType.String,\r\n      arrayType: VariantArrayType.Array,\r\n      value: Object.keys(parameters),\r\n    },\r\n    {\r\n      dataType: DataType.Variant,\r\n      arrayType: VariantArrayType.Array,\r\n      value: Object.values(parameters),\r\n    },\r\n  ]).then((result) => {\r\n    const statusCode = result.outputArguments[0].value;\r\n\r\n    if (statusCode.value) {\r\n      throw Object.assign(\r\n        new Error(`Script failed: ${statusCode.description}\r\n${result.outputArguments[1].value}`),\r\n        {\r\n          scriptId,\r\n          parameters,\r\n        }\r\n      );\r\n    }\r\n\r\n    return result;\r\n  });\r\n}\r\n\r\n/**\r\n * Creates a new Node on the server.\r\n * @param {NodeId} nodeId The new node's id.\r\n * @param {Object} options The options to use.\r\n * @param {string} options.name The node's name.\r\n * @param {NodeId} [options.parentNodeId] The node's parent, defaults to the calculated parent\r\n * (`Test` for `Test.Child`).\r\n * @param {node-opcua~NodeClass} [options.nodeClass] The node's class, defaults so\r\n * `node-opcua~NodeClass.Variable`.\r\n * @param {NodeId} [options.typeDefinition] The node's type definition, must be provided for\r\n * non-variable nodes.\r\n * @param {NodeId} [options.modellingRule] The node's modelling rule.\r\n * @param {string} [options.reference] Name of the type of the node's reference to it's parent.\r\n * @param {node-opcua~Variant} [options.value] The node's value, required for all variable nodes.\r\n */\r\nexport function createNode(\r\n  nodeId,\r\n  {\r\n    name,\r\n    parentNodeId = nodeId.parent,\r\n    nodeClass = NodeClass.Variable,\r\n    typeDefinition = new NodeId('ns=0;i=62'),\r\n    modellingRule,\r\n    reference,\r\n    value,\r\n  }\r\n) {\r\n  const variableOptions =\r\n    nodeClass.value === NodeClass.Variable.value\r\n      ? {\r\n          dataType: value.dataType.value,\r\n          valueRank: value.arrayType ? value.arrayType.value : VariantArrayType.Scalar.value,\r\n          value:\r\n            value.arrayType && value.arrayType.value !== VariantArrayType.Scalar.value\r\n              ? Array.from(value.value)\r\n              : value.value,\r\n        }\r\n      : {};\r\n\r\n  const is64Bit = value.dataType === DataType.Int64 || value.dataType === DataType.UInt64;\r\n  if (is64Bit) {\r\n    variableOptions.value = 0;\r\n  }\r\n\r\n  return callScript(new NodeId('SYSTEM.LIBRARY.ATVISE.SERVERSCRIPTS.atscm.CreateNode'), {\r\n    paramObjString: {\r\n      dataType: DataType.String,\r\n      value: JSON.stringify(\r\n        Object.assign(\r\n          {\r\n            nodeId,\r\n            browseName: name,\r\n            parentNodeId: parentNodeId || nodeId.parent,\r\n            nodeClass: nodeClass.value,\r\n            typeDefinition,\r\n            modellingRule,\r\n            reference,\r\n          },\r\n          variableOptions\r\n        )\r\n      ),\r\n    },\r\n  }).then(async (result) => {\r\n    const [{ value: createdNode }] = result.outputArguments[3].value;\r\n\r\n    if (createdNode && is64Bit) {\r\n      console.warn(\"before write\");\r\n      await writeNode(nodeId, value);\r\n      console.warn(\"after write\");\r\n    }\r\n\r\n    return result;\r\n  });\r\n}\r\n\r\n/**\r\n * Adds references to a node.\r\n * @param {NodeId} nodeId The node to add the references to.\r\n * @param {Object} references The references to add.\r\n * @return {Promise} Resolved once the references were added.\r\n * @example <caption>Add a simple reference</caption>\r\n * import { ReferenceTypeIds } from 'node-opcua/lib/opcua_node_ids';\r\n *\r\n * addReferences('AGENT.DISPLAYS.Main', {\r\n *   [47]: ['VariableTypes.ATVISE.Display'],\r\n *   // equals:\r\n *   [ReferenceTypeIds.HasTypeDefinition]: ['VariableTypes.ATVISE.Display'],\r\n * })\r\n *   .then(() => console.log('Done!'))\r\n *   .catch(console.error);\r\n */\r\nexport function addReferences(nodeId, references) {\r\n  return callScript(new NodeId('SYSTEM.LIBRARY.ATVISE.SERVERSCRIPTS.atscm.AddReferences'), {\r\n    paramObjString: {\r\n      dataType: DataType.String,\r\n      value: JSON.stringify({\r\n        nodeId,\r\n        references: Object.entries(references).map(([type, items]) => ({\r\n          referenceIdValue: parseInt(type, 10),\r\n          items,\r\n        })),\r\n      }),\r\n    },\r\n  });\r\n}\r\n"],"mappings":";;;;;;;;;;;AACA,IAAAA,QAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,OAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,UAAA,GAAAF,OAAA;AAAgF,SAAAD,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAEhF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASG,mBAAmBA,CAACC,OAAO,EAAEC,MAAM,EAAE;EAC5C,OAAO,CAACC,GAAG,EAAEC,MAAM,KAAK;IACtB,IAAID,GAAG,EAAE;MACP,OAAOD,MAAM,CAACC,GAAG,CAAC;IACpB;IACA,OAAOF,OAAO,CAACG,MAAM,CAAC;EACxB,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASC,WAAWA,CAACC,IAAI,EAAE;EACzB,OAAO,IAAIC,OAAO,CAAC,CAACN,OAAO,EAAEC,MAAM,KAAKI,IAAI,CAACN,mBAAmB,CAACC,OAAO,EAAEC,MAAM,CAAC,CAAC,CAAC;AACrF;;AAEA;AACA;AACA;AACA;AACA,eAAeM,WAAWA,CAACC,MAAM,EAAE;EACjC,IAAIL,MAAM,GAAG,IAAI;EACjB,IAAIM,KAAK,GAAG,IAAI;EAChB,IAAIC,OAAO;EAEX,IAAIC,MAAM,CAACC,YAAY,EAAE;IACvBF,OAAO,GAAGC,MAAM,CAACC,YAAY;EAC/B,CAAC,MAAM;IACLF,OAAO,GAAG,MAAMG,gBAAO,CAACf,OAAO,CAACgB,MAAM,CAAC,CAAC;IACxCH,MAAM,CAACC,YAAY,GAAGF,OAAO;EAC/B;EAEA,IAAI;IACFP,MAAM,GAAG,MAAMK,MAAM,CAACE,OAAO,CAAC;EAChC,CAAC,CAAC,OAAOd,CAAC,EAAE;IACVa,KAAK,GAAGb,CAAC;EACX;EAEA,IAAIa,KAAK,EAAE;IACT,MAAMM,IAAI;EACZ;EAEA,OAAOZ,MAAM;AACf;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACO,eAAea,QAAQA,CAACC,MAAM,EAAE;EACrC,OAAOV,WAAW,CAAEG,OAAO,IAAKN,WAAW,CAAEc,EAAE,IAAKR,OAAO,CAACS,iBAAiB,CAACF,MAAM,EAAEC,EAAE,CAAC,CAAC,CAAC,CAACE,IAAI,CAC9F,CAAC;IAAEC,KAAK;IAAEC;EAAW,CAAC,KAAK;IACzB,IAAIA,UAAU,KAAKC,sBAAW,CAACC,IAAI,EAAE;MACnC,MAAMC,MAAM,CAACC,MAAM,CAAC,IAAIC,KAAK,CAACL,UAAU,CAACM,WAAW,CAAC,EAAE;QAAEX,MAAM;QAAEK;MAAW,CAAC,CAAC;IAChF;IAEA,OAAOD,KAAK;EACd,CACF,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASQ,SAASA,CAACZ,MAAM,EAAEI,KAAK,EAAE;EACvC,OAAOd,WAAW,CAAEG,OAAO,IACzBN,WAAW,CAAEc,EAAE,IAAKR,OAAO,CAACoB,eAAe,CAACb,MAAM,EAAEI,KAAK,EAAEH,EAAE,CAAC,CAChE,CAAC,CAACE,IAAI,CAAEE,UAAU,IAAK;IACrB,IAAIA,UAAU,KAAKC,sBAAW,CAACC,IAAI,EAAE;MACnC,MAAMC,MAAM,CAACC,MAAM,CAAC,IAAIC,KAAK,CAACL,UAAU,CAACM,WAAW,CAAC,EAAE;QAAEX,MAAM;QAAEK;MAAW,CAAC,CAAC;IAChF;IAEA,OAAOA,UAAU;EACnB,CAAC,CAAC;AACJ;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASS,UAAUA,CAACC,QAAQ,EAAEC,IAAI,GAAG,EAAE,EAAE;EAC9C,OAAO1B,WAAW,CAAEG,OAAO,IACzBN,WAAW,CAAEc,EAAE,IACbR,OAAO,CAACL,IAAI,CACV,CACE;IACE6B,QAAQ,EAAEF,QAAQ,CAACG,MAAM;IACzBH,QAAQ;IACRI,cAAc,EAAEH;EAClB,CAAC,CACF,EACDf,EACF,CACF,CACF,CAAC,CAACE,IAAI,CAAC,CAAC,CAACjB,MAAM,CAAC,GAAG,EAAE,KAAK;IACxB,IAAIA,MAAM,CAACmB,UAAU,CAACD,KAAK,EAAE;MAC3B,MAAMI,MAAM,CAACC,MAAM,CAAC,IAAIC,KAAK,CAACxB,MAAM,CAACmB,UAAU,CAACM,WAAW,CAAC,EAAE;QAC5DI,QAAQ;QACRI,cAAc,EAAEH;MAClB,CAAC,CAAC;IACJ;IAEA,OAAO9B,MAAM;EACf,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASkC,UAAUA,CAACC,QAAQ,EAAEC,UAAU,GAAG,CAAC,CAAC,EAAE;EACpD,OAAOR,UAAU,CAAC,IAAIS,eAAM,CAAC,iCAAiC,CAAC,EAAE,CAC/D;IACEC,QAAQ,EAAEC,mBAAQ,CAACF,MAAM;IACzBnB,KAAK,EAAEiB;EACT,CAAC,EACD;IACEG,QAAQ,EAAEC,mBAAQ,CAACF,MAAM;IACzBnB,KAAK,EAAEiB,QAAQ,CAACH;EAClB,CAAC,EACD;IACEM,QAAQ,EAAEC,mBAAQ,CAACC,MAAM;IACzBC,SAAS,EAAEC,2BAAgB,CAACC,KAAK;IACjCzB,KAAK,EAAEI,MAAM,CAACsB,IAAI,CAACR,UAAU;EAC/B,CAAC,EACD;IACEE,QAAQ,EAAEC,mBAAQ,CAACM,OAAO;IAC1BJ,SAAS,EAAEC,2BAAgB,CAACC,KAAK;IACjCzB,KAAK,EAAEI,MAAM,CAACwB,MAAM,CAACV,UAAU;EACjC,CAAC,CACF,CAAC,CAACnB,IAAI,CAAEjB,MAAM,IAAK;IAClB,MAAMmB,UAAU,GAAGnB,MAAM,CAAC+C,eAAe,CAAC,CAAC,CAAC,CAAC7B,KAAK;IAElD,IAAIC,UAAU,CAACD,KAAK,EAAE;MACpB,MAAMI,MAAM,CAACC,MAAM,CACjB,IAAIC,KAAK,CAAC,kBAAkBL,UAAU,CAACM,WAAW;AAC1D,EAAEzB,MAAM,CAAC+C,eAAe,CAAC,CAAC,CAAC,CAAC7B,KAAK,EAAE,CAAC,EAC5B;QACEiB,QAAQ;QACRC;MACF,CACF,CAAC;IACH;IAEA,OAAOpC,MAAM;EACf,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASgD,UAAUA,CACxBlC,MAAM,EACN;EACEmC,IAAI;EACJC,YAAY,GAAGpC,MAAM,CAACkB,MAAM;EAC5BmB,SAAS,GAAGC,oBAAS,CAACC,QAAQ;EAC9BC,cAAc,GAAG,IAAIjB,eAAM,CAAC,WAAW,CAAC;EACxCkB,aAAa;EACbC,SAAS;EACTtC;AACF,CAAC,EACD;EACA,MAAMuC,eAAe,GACnBN,SAAS,CAACjC,KAAK,KAAKkC,oBAAS,CAACC,QAAQ,CAACnC,KAAK,GACxC;IACEoB,QAAQ,EAAEpB,KAAK,CAACoB,QAAQ,CAACpB,KAAK;IAC9BwC,SAAS,EAAExC,KAAK,CAACuB,SAAS,GAAGvB,KAAK,CAACuB,SAAS,CAACvB,KAAK,GAAGwB,2BAAgB,CAACiB,MAAM,CAACzC,KAAK;IAClFA,KAAK,EACHA,KAAK,CAACuB,SAAS,IAAIvB,KAAK,CAACuB,SAAS,CAACvB,KAAK,KAAKwB,2BAAgB,CAACiB,MAAM,CAACzC,KAAK,GACtEyB,KAAK,CAACiB,IAAI,CAAC1C,KAAK,CAACA,KAAK,CAAC,GACvBA,KAAK,CAACA;EACd,CAAC,GACD,CAAC,CAAC;EAER,MAAM2C,OAAO,GAAG3C,KAAK,CAACoB,QAAQ,KAAKC,mBAAQ,CAACuB,KAAK,IAAI5C,KAAK,CAACoB,QAAQ,KAAKC,mBAAQ,CAACwB,MAAM;EACvF,IAAIF,OAAO,EAAE;IACXJ,eAAe,CAACvC,KAAK,GAAG,CAAC;EAC3B;EAEA,OAAOgB,UAAU,CAAC,IAAIG,eAAM,CAAC,sDAAsD,CAAC,EAAE;IACpF2B,cAAc,EAAE;MACd1B,QAAQ,EAAEC,mBAAQ,CAACC,MAAM;MACzBtB,KAAK,EAAE+C,IAAI,CAACC,SAAS,CACnB5C,MAAM,CAACC,MAAM,CACX;QACET,MAAM;QACNqD,UAAU,EAAElB,IAAI;QAChBC,YAAY,EAAEA,YAAY,IAAIpC,MAAM,CAACkB,MAAM;QAC3CmB,SAAS,EAAEA,SAAS,CAACjC,KAAK;QAC1BoC,cAAc;QACdC,aAAa;QACbC;MACF,CAAC,EACDC,eACF,CACF;IACF;EACF,CAAC,CAAC,CAACxC,IAAI,CAAC,MAAOjB,MAAM,IAAK;IACxB,MAAM,CAAC;MAAEkB,KAAK,EAAEkD;IAAY,CAAC,CAAC,GAAGpE,MAAM,CAAC+C,eAAe,CAAC,CAAC,CAAC,CAAC7B,KAAK;IAEhE,IAAIkD,WAAW,IAAIP,OAAO,EAAE;MAC1BQ,OAAO,CAACC,IAAI,CAAC,cAAc,CAAC;MAC5B,MAAM5C,SAAS,CAACZ,MAAM,EAAEI,KAAK,CAAC;MAC9BmD,OAAO,CAACC,IAAI,CAAC,aAAa,CAAC;IAC7B;IAEA,OAAOtE,MAAM;EACf,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASuE,aAAaA,CAACzD,MAAM,EAAE0D,UAAU,EAAE;EAChD,OAAOtC,UAAU,CAAC,IAAIG,eAAM,CAAC,yDAAyD,CAAC,EAAE;IACvF2B,cAAc,EAAE;MACd1B,QAAQ,EAAEC,mBAAQ,CAACC,MAAM;MACzBtB,KAAK,EAAE+C,IAAI,CAACC,SAAS,CAAC;QACpBpD,MAAM;QACN0D,UAAU,EAAElD,MAAM,CAACmD,OAAO,CAACD,UAAU,CAAC,CAACE,GAAG,CAAC,CAAC,CAACC,IAAI,EAAEC,KAAK,CAAC,MAAM;UAC7DC,gBAAgB,EAAEC,QAAQ,CAACH,IAAI,EAAE,EAAE,CAAC;UACpCC;QACF,CAAC,CAAC;MACJ,CAAC;IACH;EACF,CAAC,CAAC;AACJ","ignoreList":[]}