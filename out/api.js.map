{"version":3,"file":"api.js","names":["_Session","_interopRequireDefault","require","_NodeId","_nodeOpcua","e","__esModule","default","ownKeys","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","call","TypeError","String","Number","promisifiedCallback","resolve","reject","err","result","promisified","Promise","withSession","action","error","session","global","atscmSession","Session","create","etes","readNode","nodeId","cb","readVariableValue","then","statusCode","StatusCodes","Good","assign","Error","description","writeNode","writeSingleNode","callMethod","methodId","args","objectId","parent","inputArguments","callScript","scriptId","parameters","NodeId","dataType","DataType","arrayType","VariantArrayType","Array","Variant","values","outputArguments","createNode","name","parentNodeId","nodeClass","NodeClass","Variable","typeDefinition","coerceNodeId","modellingRule","reference","_value$arrayType","isVariable","is64Bit","Int64","UInt64","variableOptions","valueRank","Scalar","from","paramObj","browseName","paramObjString","JSON","stringify","_result$outputArgumen","_result$outputArgumen2","_result$outputArgumen3","_result$outputArgumen4","createdNode","console","warn","addReferences","references","entries","map","type","items","referenceIdValue","parseInt"],"sources":["../src/api.js"],"sourcesContent":["\r\nimport Session from './lib/server/Session';\r\nimport NodeId from './lib/model/opcua/NodeId';\r\nimport { coerceNodeId, DataType, NodeClass, StatusCodes, VariantArrayType } from 'node-opcua';\r\n\r\n// Helpers\r\n/**\r\n * Creates a callback that calls `resolve` on success and `reject` on error.\r\n * @param {function(result: any): void} resolve The resolve callback.\r\n * @param {function(error: Error): void} reject The reject callback.\r\n * @example\r\n * // `aCallbackFn` is a function that accepts a node-style callback as the last argument\r\n * const promise = new Promise(\r\n *   (resolve, reject) => aCallbackFn('other', 'args', promisifiedCallback(resolve, reject)\r\n * );\r\n */\r\nfunction promisifiedCallback(resolve, reject) {\r\n  return (err, result) => {\r\n    if (err) {\r\n      return reject(err);\r\n    }\r\n    return resolve(result);\r\n  };\r\n}\r\n\r\n/**\r\n * Promisifies a async function that would otherwise require a callback.\r\n * @param {function(cb: function(error: Error, result: any)):Promise<any>} call A function that\r\n * accepts a callback and performs the async action to wrap.\r\n */\r\nfunction promisified(call) {\r\n  return new Promise((resolve, reject) => call(promisifiedCallback(resolve, reject)));\r\n}\r\n\r\n/**\r\n * Creates a session, runs `action` and closes the session.\r\n * @param {function(session: Session): Promise<any>} action The action to run a session.\r\n */\r\nasync function withSession(action) {\r\n  let result = null;\r\n  let error = null;\r\n  let session;\r\n  \r\n  if (global.atscmSession) {\r\n    session = global.atscmSession;\r\n  } else {\r\n    session = await Session.create();\r\n    global.atscmSession = session;\r\n  }\r\n\r\n  try {\r\n    result = await action(session);\r\n  } catch (e) {\r\n    error = e;\r\n  }\r\n\r\n  if (error) {\r\n    throw etes;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n// Reading/Writing\r\n\r\n/**\r\n * Reads a single node's value.\r\n * @param {NodeId} nodeId The node to read.\r\n * @return {Promise<any>} The read value.\r\n */\r\nexport async function readNode(nodeId) {\r\n  return withSession((session) => promisified((cb) => session.readVariableValue(nodeId, cb))).then(\r\n    ({ value, statusCode }) => {\r\n      if (statusCode !== StatusCodes.Good) {\r\n        throw Object.assign(new Error(statusCode.description), { nodeId, statusCode });\r\n      }\r\n\r\n      return value;\r\n    }\r\n  );\r\n}\r\n\r\n/**\r\n * Writes a single node's value.\r\n * @param {NodeId} nodeId The node to write.\r\n * @param {Variant} value The value to write.\r\n * @return {Promise<node-opcua~StatusCodes} The operation status result.\r\n */\r\nexport function writeNode(nodeId, value) {\r\n  return withSession((session) =>\r\n    promisified((cb) => session.writeSingleNode(nodeId, value, cb))\r\n  ).then((statusCode) => {\r\n    if (statusCode !== StatusCodes.Good) {\r\n      throw Object.assign(new Error(statusCode.description), { nodeId, statusCode });\r\n    }\r\n\r\n    return statusCode;\r\n  });\r\n}\r\n\r\n// Methods / Scripts\r\n\r\n/**\r\n * Calls an OPC-UA method on the server.\r\n * @param {NodeId} methodId The method's id.\r\n * @param {Array<Variant>} args The arguments to pass.\r\n */\r\nexport function callMethod(methodId, args = []) {\r\n  return withSession((session) =>\r\n    promisified((cb) =>\r\n      session.call(\r\n        [\r\n          {\r\n            objectId: methodId.parent,\r\n            methodId,\r\n            inputArguments: args,\r\n          },\r\n        ],\r\n        cb\r\n      )\r\n    )\r\n  ).then(([result] = []) => {\r\n    if (result.statusCode.value) {\r\n      throw Object.assign(new Error(result.statusCode.description), {\r\n        methodId,\r\n        inputArguments: args,\r\n      });\r\n    }\r\n\r\n    return result;\r\n  });\r\n}\r\n\r\n/**\r\n * Calls a server script on the server.\r\n * @param {NodeId} scriptId The script's id.\r\n * @param {Object} parameters The parameters to pass, given as a map of Variants, like\r\n * `{ name: { ... } }`.\r\n */\r\nexport function callScript(scriptId, parameters = {}) {\r\n  return callMethod(new NodeId('AGENT.SCRIPT.METHODS.callScript'), [\r\n    {\r\n      dataType: DataType.NodeId,\r\n      value: scriptId,\r\n    },\r\n    {\r\n      dataType: DataType.NodeId,\r\n      value: scriptId.parent,\r\n    },\r\n    {\r\n      dataType: DataType.String,\r\n      arrayType: VariantArrayType.Array,\r\n      value: Object.keys(parameters),\r\n    },\r\n    {\r\n      dataType: DataType.Variant,\r\n      arrayType: VariantArrayType.Array,\r\n      value: Object.values(parameters),\r\n    },\r\n  ]).then((result) => {\r\n    const statusCode = result.outputArguments[0].value;\r\n\r\n    if (statusCode.value) {\r\n      throw Object.assign(\r\n        new Error(`Script failed: ${statusCode.description}\r\n${result.outputArguments[1].value}`),\r\n        {\r\n          scriptId,\r\n          parameters,\r\n        }\r\n      );\r\n    }\r\n\r\n    return result;\r\n  });\r\n}\r\n\r\n/**\r\n * Creates a new Node on the server.\r\n * @param {NodeId} nodeId The new node's id.\r\n * @param {Object} options The options to use.\r\n * @param {string} options.name The node's name.\r\n * @param {NodeId} [options.parentNodeId] The node's parent, defaults to the calculated parent\r\n * (`Test` for `Test.Child`).\r\n * @param {node-opcua~NodeClass} [options.nodeClass] The node's class, defaults so\r\n * `node-opcua~NodeClass.Variable`.\r\n * @param {NodeId} [options.typeDefinition] The node's type definition, must be provided for\r\n * non-variable nodes.\r\n * @param {NodeId} [options.modellingRule] The node's modelling rule.\r\n * @param {string} [options.reference] Name of the type of the node's reference to it's parent.\r\n * @param {node-opcua~Variant} [options.value] The node's value, required for all variable nodes.\r\n */\r\nexport function createNode(\r\n  nodeId,\r\n  {\r\n    name,\r\n    parentNodeId = nodeId.parent,\r\n    nodeClass = NodeClass.Variable,\r\n    typeDefinition = coerceNodeId(\"ns=0;i=62\"),\r\n    modellingRule,\r\n    reference,\r\n    value,\r\n  }\r\n) {\r\n  nodeId = coerceNodeId(nodeId);\r\n  parentNodeId = coerceNodeId(parentNodeId || nodeId.parent);\r\n\r\n  const isVariable = nodeClass === NodeClass.Variable;\r\n  const is64Bit =\r\n    value?.dataType === DataType.Int64 ||\r\n    value?.dataType === DataType.UInt64;\r\n\r\n  const variableOptions = isVariable\r\n    ? {\r\n        dataType: value.dataType,\r\n        valueRank:\r\n          value.arrayType ?? VariantArrayType.Scalar,\r\n        value:\r\n          value.arrayType &&\r\n          value.arrayType !== VariantArrayType.Scalar\r\n            ? Array.from(value.value)\r\n            : value.value,\r\n      }\r\n    : {};\r\n\r\n  if (is64Bit) {\r\n    variableOptions.value = 0; // placeholder value\r\n  }\r\n\r\n  const paramObj = {\r\n    nodeId,\r\n    browseName: name,\r\n    parentNodeId,\r\n    nodeClass,\r\n    typeDefinition,\r\n    modellingRule,\r\n    reference,\r\n    ...variableOptions,\r\n  };\r\n\r\n  return callScript(\r\n    new NodeId(\"SYSTEM.LIBRARY.ATVISE.SERVERSCRIPTS.atscm.CreateNode\"),\r\n    {\r\n      paramObjString: {\r\n        dataType: DataType.String,\r\n        value: JSON.stringify(paramObj),\r\n      },\r\n    }\r\n  ).then(async (result) => {\r\n    const createdNode = result.outputArguments?.[3]?.value?.[0]?.value;\r\n\r\n    if (createdNode && is64Bit) {\r\n      console.warn(\"Writing actual 64-bit value after creation...\");\r\n      await writeNode(nodeId, value);\r\n    }\r\n\r\n    return result;\r\n  });\r\n}\r\n\r\n/**\r\n * Adds references to a node.\r\n * @param {NodeId} nodeId The node to add the references to.\r\n * @param {Object} references The references to add.\r\n * @return {Promise} Resolved once the references were added.\r\n * @example <caption>Add a simple reference</caption>\r\n * import { ReferenceTypeIds } from 'node-opcua/lib/opcua_node_ids';\r\n *\r\n * addReferences('AGENT.DISPLAYS.Main', {\r\n *   [47]: ['VariableTypes.ATVISE.Display'],\r\n *   // equals:\r\n *   [ReferenceTypeIds.HasTypeDefinition]: ['VariableTypes.ATVISE.Display'],\r\n * })\r\n *   .then(() => console.log('Done!'))\r\n *   .catch(console.error);\r\n */\r\nexport function addReferences(nodeId, references) {\r\n  return callScript(new NodeId('SYSTEM.LIBRARY.ATVISE.SERVERSCRIPTS.atscm.AddReferences'), {\r\n    paramObjString: {\r\n      dataType: DataType.String,\r\n      value: JSON.stringify({\r\n        nodeId,\r\n        references: Object.entries(references).map(([type, items]) => ({\r\n          referenceIdValue: parseInt(type, 10),\r\n          items,\r\n        })),\r\n      }),\r\n    },\r\n  });\r\n}\r\n"],"mappings":"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","ignoreList":[]}