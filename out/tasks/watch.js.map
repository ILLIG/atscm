{"version":3,"file":"watch.js","names":["_path","require","_sane","_interopRequireDefault","_browserSync","_gulplog","_Watcher","_async","_tasks","_ProjectConfig","_fs","_hooks","_checkAtserver","_checkServerscripts","_pull","_push","e","__esModule","default","WatchTask","constructor","browserSyncInstance","browserSync","create","_pulling","_pushing","_lastPull","_lastPushed","directoryToWatch","_waitForWatcher","watcher","Promise","resolve","reject","on","err","startFileWatcher","validateDirectoryExists","catch","code","Logger","info","Object","assign","message","then","sane","glob","watchman","process","platform","startServerWatcher","ServerWatcher","initBrowserSync","options","init","proxy","ProjectConfig","host","port","http","ws","printTaskError","contextMessage","handleTaskError","refined","error","stack","handleFileChange","path","root","_handlingChange","debug","performPush","join","singleNode","reload","delay","handleServerChange","readResult","nodeId","value","performPull","recursive","run","open","all","fileWatcher","serverWatcher","emitter","bind","exports","watch","context","setupContext","checkAtserver","checkServerscripts","description"],"sources":["../../src/tasks/watch.js"],"sourcesContent":["import { join } from 'path';\r\nimport sane from 'sane';\r\nimport browserSync from 'browser-sync';\r\nimport Logger from 'gulplog';\r\nimport ServerWatcher from '../lib/server/Watcher';\r\nimport { delay } from '../lib/helpers/async';\r\nimport { handleTaskError } from '../lib/helpers/tasks';\r\nimport ProjectConfig from '../config/ProjectConfig';\r\nimport { validateDirectoryExists } from '../util/fs';\r\nimport { setupContext } from '../hooks/hooks';\r\nimport checkAtserver from '../hooks/check-atserver';\r\nimport checkServerscripts from '../hooks/check-serverscripts';\r\nimport { performPull } from './pull';\r\nimport { performPush } from './push';\r\n\r\n/**\r\n * The task executed when running `atscm watch`.\r\n */\r\nexport class WatchTask {\r\n  /**\r\n   * Creates a new watch task instance. Also creates a new Browsersync instance.\r\n   */\r\n  constructor() {\r\n    /**\r\n     * The Browsersync instance used.\r\n     * @type {events~Emitter}\r\n     */\r\n    this.browserSyncInstance = browserSync.create();\r\n\r\n    /**\r\n     * If the task is currently pulling.\r\n     * @type {boolean}\r\n     */\r\n    this._pulling = false;\r\n\r\n    /**\r\n     * If the task is currently pushing.\r\n     * @type {boolean}\r\n     */\r\n    this._pushing = false;\r\n\r\n    /**\r\n     * Timestamp of the last pull\r\n     * @type {number}\r\n     */\r\n    this._lastPull = 0;\r\n\r\n    /**\r\n     * The {@link NodeId} of the last push.\r\n     * @type {?NodeId}\r\n     */\r\n    this._lastPushed = null;\r\n  }\r\n\r\n  /**\r\n   * The directory to watch.\r\n   * @type {string}\r\n   */\r\n  get directoryToWatch() {\r\n    return './src';\r\n  }\r\n\r\n  /**\r\n   * Waits for a watcher (which can actually be any kind of {@link events~Emitter}) to emit a\r\n   * \"ready\" event.\r\n   * @param {events~Emitter} watcher The watcher to wait for.\r\n   * @return {Promise<events~Emitter, Error>} Fulfilled with the set up watcher or rejected with the\r\n   * watcher error that occurred while waiting for it to get ready.\r\n   */\r\n  _waitForWatcher(watcher) {\r\n    return new Promise((resolve, reject) => {\r\n      watcher.on('error', (err) => reject(err));\r\n      watcher.on('ready', () => resolve(watcher));\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Starts a file watcher for the directory {@link WatchTask#directoryToWatch}.\r\n   * @return {Promise<sane~Watcher, Error>} Fulfilled with the file watcher once it is ready or\r\n   * rejected with the error that occurred while starting the watcher.\r\n   */\r\n  startFileWatcher() {\r\n    return validateDirectoryExists(this.directoryToWatch)\r\n      .catch((err) => {\r\n        if (err.code === 'ENOENT') {\r\n          Logger.info(`Create a directory at ${this.directoryToWatch} or run \\`atscm pull\\` first`);\r\n\r\n          Object.assign(err, {\r\n            message: `Directory ${this.directoryToWatch} does not exist`,\r\n          });\r\n        }\r\n\r\n        throw err;\r\n      })\r\n      .then(() =>\r\n        this._waitForWatcher(\r\n          sane(this.directoryToWatch, {\r\n            glob: '**/*.*',\r\n            watchman: process.platform === 'darwin',\r\n          })\r\n        )\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Starts a watcher that watches the atvise server for changes.\r\n   * @return {Promise<Watcher, Error>} Fulfilled with the server watcher once it is ready or\r\n   * rejected with the error that occurred while starting the watcher.\r\n   */\r\n  startServerWatcher() {\r\n    return this._waitForWatcher(new ServerWatcher());\r\n  }\r\n\r\n  /**\r\n   * Initializes {@link WatchTask#browserSyncInstance}.\r\n   * @param {Object} options The options to pass to browsersync.\r\n   * @see https://browsersync.io/docs/options\r\n   */\r\n  initBrowserSync(options) {\r\n    this.browserSyncInstance.init(\r\n      Object.assign(\r\n        {\r\n          proxy: `${ProjectConfig.host}:${ProjectConfig.port.http}`,\r\n          ws: true,\r\n          // logLevel: 'debug', FIXME: Use log level specified in cli options\r\n          // logPrefix: '',\r\n        },\r\n        options\r\n      )\r\n    );\r\n\r\n    /* bs.logger.logOne = function(args, msg, level, unprefixed) {\r\n      args = args.slice(2);\r\n\r\n      if (this.config.useLevelPrefixes && !unprefixed) {\r\n        msg = this.config.prefixes[level] + msg;\r\n      }\r\n\r\n      msg = this.compiler.compile(msg, unprefixed);\r\n\r\n      args.unshift(msg);\r\n\r\n      Logger[level](format(...args));\r\n\r\n      this.resetTemps();\r\n\r\n      return this;\r\n    }; */\r\n  }\r\n\r\n  /**\r\n   * Prints an error that happened while handling a change.\r\n   * @param {string} contextMessage Describes the currently run action.\r\n   * @param {Error} err The error that occured.\r\n   */\r\n  printTaskError(contextMessage, err) {\r\n    try {\r\n      handleTaskError(err);\r\n    } catch (refined) {\r\n      Logger.error(contextMessage, refined.message, refined.stack);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles a file change.\r\n   * @param {string} path The path of the file that changed.\r\n   * @param {string} root The root of the file that changed.\r\n   * @return {Promise<boolean>} Resolved with `true` if the change triggered a push operation,\r\n   * with `false` otherwise.\r\n   */\r\n  handleFileChange(path, root) {\r\n    if (this._handlingChange) {\r\n      Logger.debug('Ignoring', path, 'changed');\r\n      return Promise.resolve(false);\r\n    }\r\n\r\n    this._handlingChange = true;\r\n    Logger.info(path, 'changed');\r\n\r\n    return performPush(join(root, path), { singleNode: true })\r\n      .catch((err) => this.printTaskError('Push failed', err))\r\n      .then(async () => {\r\n        this.browserSyncInstance.reload();\r\n\r\n        await delay(500);\r\n\r\n        this._handlingChange = false;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Handles an atvise server change.\r\n   * @param {ReadStream.ReadResult} readResult The read result of the modification.\r\n   * @return {Promise<boolean>} Resolved with `true` if the change triggered a pull operation,\r\n   * with `false` otherwise.\r\n   */\r\n  handleServerChange(readResult) {\r\n    if (this._handlingChange) {\r\n      Logger.debug('Ignoring', readResult.nodeId.value, 'changed');\r\n      return Promise.resolve(false);\r\n    }\r\n\r\n    this._handlingChange = true;\r\n    Logger.info(readResult.nodeId.value, 'changed');\r\n\r\n    return performPull([readResult.nodeId], { recursive: false })\r\n      .catch((err) => this.printTaskError('Pull failed', err))\r\n      .then(async () => {\r\n        this.browserSyncInstance.reload();\r\n\r\n        await delay(500);\r\n\r\n        this._handlingChange = false;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Starts the file and server watchers, initializes Browsersync and registers change event\r\n   * handlers.\r\n   * @param {Object} [options] The options to pass to browsersync.\r\n   * @param {boolean} [options.open=true] If the browser should be opened once browsersync is up.\r\n   * @return {Promise<{ serverWatcher: Watcher, fileWatcher: sane~Watcher }, Error>} Fulfilled once\r\n   * all watchers are set up and Browsersync was initialized.\r\n   */\r\n  run({ open = true } = {}) {\r\n    return Promise.all([this.startFileWatcher(), this.startServerWatcher()]).then(\r\n      ([fileWatcher, serverWatcher]) => {\r\n        this.browserSyncInstance.emitter.on('service:running', () => {\r\n          Logger.info('Watching for changes...');\r\n          Logger.debug('Press Ctrl-C to exit');\r\n        });\r\n\r\n        fileWatcher.on('change', this.handleFileChange.bind(this));\r\n        serverWatcher.on('change', this.handleServerChange.bind(this));\r\n\r\n        this.initBrowserSync({ open });\r\n\r\n        return { fileWatcher, serverWatcher };\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * The gulp task invoced when running `atscm watch`.\r\n * @param {Object} options The options to pass to the watch task, see {@link WatchTask#run} for\r\n * available options.\r\n * @return {Promise<{ serverWatcher: Watcher, fileWatcher: sane~Watcher }, Error>} Fulfilled once\r\n * all watchers are set up and Browsersync was initialized.\r\n */\r\nexport default async function watch(options) {\r\n  const context = setupContext();\r\n  await checkAtserver(context);\r\n  await checkServerscripts(context);\r\n\r\n  return new WatchTask().run(options);\r\n}\r\n\r\nwatch.description = 'Watch local files and atvise server nodes to trigger pull/push on change';\r\n"],"mappings":"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","ignoreList":[]}