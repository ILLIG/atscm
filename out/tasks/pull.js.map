{"version":3,"file":"pull.js","names":["_mri","_interopRequireDefault","require","_fsExtra","_gulplog","_NodeBrowser","_ProjectConfig","_Transformer","_interopRequireWildcard","_dest","_log","_tasks","_Session","_checkAtserver","_hooks","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","ownKeys","keys","getOwnPropertySymbols","filter","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","value","configurable","writable","_toPrimitive","Symbol","toPrimitive","TypeError","String","Number","performPull","nodes","options","writeStream","dest","cleanRenameConfig","clean","applyTransforms","Transformer","combinedTransformer","ProjectConfig","useTransformers","TransformDirection","FromDB","browser","NodeBrowser","handleNode","node","transform","removed","context","_added","addNode","remove","writeAsync","assign","browse","then","writeRenamefile","pull","parseOptions","process","argv","slice","Session","pool","setupContext","checkAtserver","Logger","info","emptyDir","promise","reportProgress","getter","_pushed","formatter","count","finishTask","handleTaskError","description"],"sources":["../../src/tasks/pull.js"],"sourcesContent":["import parseOptions from 'mri';\r\nimport { emptyDir } from 'fs-extra';\r\nimport Logger from 'gulplog';\r\nimport NodeBrowser from '../lib/server/NodeBrowser';\r\nimport ProjectConfig from '../config/ProjectConfig';\r\nimport Transformer, { TransformDirection } from '../lib/transform/Transformer.js';\r\nimport dest from '../lib/gulp/dest';\r\nimport { reportProgress } from '../lib/helpers/log';\r\nimport { handleTaskError, finishTask } from '../lib/helpers/tasks';\r\nimport Session from '../lib/server/Session';\r\nimport checkAtserver from '../hooks/check-atserver';\r\nimport { setupContext } from '../hooks/hooks';\r\n\r\n/**\r\n * Pulls the given nodes from the server.\r\n * @param {NodeId[]} nodes The nodes to pull from the server.\r\n * @param {Object} options Options passed to {@link NodeBrowser}.\r\n */\r\nexport function performPull(nodes, options = {}) {\r\n  const writeStream = dest('./src', { cleanRenameConfig: options.clean });\r\n  const applyTransforms = Transformer.combinedTransformer(\r\n    ProjectConfig.useTransformers,\r\n    TransformDirection.FromDB\r\n  );\r\n\r\n  const browser = new NodeBrowser({\r\n    ...options,\r\n    async handleNode(node, { transform = true } = {}) {\r\n      let removed = false;\r\n      const context = {\r\n        _added: [],\r\n        addNode(n) {\r\n          this._added.push(n);\r\n        },\r\n        remove: () => {\r\n          removed = true;\r\n        },\r\n      };\r\n\r\n      if (transform) {\r\n        await applyTransforms(node, context);\r\n      }\r\n\r\n      if (removed) {\r\n        return;\r\n      }\r\n      await writeStream.writeAsync(node);\r\n\r\n      // Enqueue added nodes\r\n      if (context._added.length) {\r\n        context._added.forEach((n) => this.addNode(n));\r\n      }\r\n    },\r\n  });\r\n\r\n  return Object.assign(\r\n    browser.browse(nodes).then(() => writeStream.writeRenamefile()),\r\n    {\r\n      browser,\r\n    }\r\n  );\r\n}\r\n\r\n/**\r\n * Pulls all nodes from atvise server.\r\n * @param {Object} [options] The options to use.\r\n * @param {boolean} [options.clean] If the source directory should be cleaned first.\r\n */\r\nexport default async function pull(options) {\r\n  const { clean } = typeof options === 'object' ? options : parseOptions(process.argv.slice(2));\r\n\r\n  Session.pool();\r\n\r\n  // Run hooks\r\n  const context = setupContext();\r\n  await checkAtserver(context);\r\n\r\n  if (clean) {\r\n    Logger.info('Using --clean, removing pulled files first');\r\n    await emptyDir('./src');\r\n  }\r\n\r\n  const promise = performPull(ProjectConfig.nodes, { clean });\r\n\r\n  return reportProgress(promise, {\r\n    getter: () => promise.browser._pushed,\r\n    formatter: (count) => `Processed ${count} nodes`,\r\n  }).then(finishTask, handleTaskError);\r\n}\r\n\r\npull.description = 'Pull all nodes from atvise server';\r\n"],"mappings":"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","ignoreList":[]}