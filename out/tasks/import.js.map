{"version":3,"file":"import.js","names":["_gulp","require","_serverScripts","_interopRequireDefault","_package","_streamToPromise","_variant","_opcua_status_code","_gulplog","_ImportStream","_api","_version","_async","_tasks","_Session","_hooks","_checkAtserver","e","__esModule","default","importTask","srcStream","src","scripts","versionVariant","dataType","DataType","String","value","version","Session","pool","context","setupContext","checkAtserver","toPromise","pipe","ImportStream","then","writeNode","versionNode","catch","err","statusCode","StatusCodes","BadNodeIdUnknown","maxTries","retryDelay","tryNo","tryToCreate","createNode","name","outputArguments","length","Logger","debug","delay","Error","finishTask","handleTaskError","description"],"sources":["../../src/tasks/import.js"],"sourcesContent":["import { src } from 'gulp';\r\nimport scripts from '@atscm/server-scripts';\r\nimport { version } from '@atscm/server-scripts/package.json';\r\nimport toPromise from 'stream-to-promise';\r\nimport { DataType } from 'node-opcua/lib/datamodel/variant';\r\nimport { StatusCodes } from 'node-opcua/lib/datamodel/opcua_status_code';\r\nimport Logger from 'gulplog';\r\nimport ImportStream from '../lib/gulp/ImportStream';\r\nimport { writeNode, createNode } from '../api';\r\nimport { versionNode } from '../lib/server/scripts/version';\r\nimport { delay } from '../lib/helpers/async';\r\nimport { handleTaskError, finishTask } from '../lib/helpers/tasks';\r\nimport Session from '../lib/server/Session';\r\nimport { setupContext } from '../hooks/hooks';\r\nimport checkAtserver from '../hooks/check-atserver';\r\n\r\n/**\r\n * Imports all xml files needed for atscm usage.\r\n * @return {Promise<void>} The running task.\r\n */\r\nexport default async function importTask() {\r\n  const srcStream = src(scripts);\r\n  const versionVariant = { dataType: DataType.String, value: version };\r\n\r\n  Session.pool();\r\n\r\n  const context = setupContext();\r\n  await checkAtserver(context);\r\n\r\n  return toPromise(srcStream.pipe(new ImportStream()))\r\n    .then(() => writeNode(versionNode, versionVariant))\r\n    .catch((err) => {\r\n      if (err.statusCode === StatusCodes.BadNodeIdUnknown) {\r\n        const maxTries = 20;\r\n        const retryDelay = 100;\r\n\r\n        let tryNo = 0;\r\n        const tryToCreate = () => {\r\n          tryNo++;\r\n\r\n          return createNode(versionNode, {\r\n            name: 'version',\r\n            value: versionVariant,\r\n          }).then(async ({ outputArguments }) => {\r\n            if (outputArguments[3].value.length < 2) {\r\n              if (tryNo < maxTries) {\r\n                Logger.debug(`Create script is not ready yet. Retrying after ${retryDelay}ms`);\r\n\r\n                await delay(retryDelay);\r\n                return tryToCreate();\r\n              }\r\n\r\n              throw new Error('CreateNode script is not ready yet. Try again later');\r\n            }\r\n\r\n            return true;\r\n          });\r\n        };\r\n\r\n        return tryToCreate().then(() => Logger.debug(`Import worked on attempt # ${tryNo}`));\r\n      }\r\n\r\n      throw err;\r\n    })\r\n    .then(finishTask, handleTaskError);\r\n}\r\n\r\nimportTask.description = 'Imports all xml resources needed for atscm usage';\r\n"],"mappings":";;;;;;AAAA,IAAAA,KAAA,GAAAC,OAAA;AACA,IAAAC,cAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAAG,QAAA,GAAAH,OAAA;AACA,IAAAI,gBAAA,GAAAF,sBAAA,CAAAF,OAAA;AACA,IAAAK,QAAA,GAAAL,OAAA;AACA,IAAAM,kBAAA,GAAAN,OAAA;AACA,IAAAO,QAAA,GAAAL,sBAAA,CAAAF,OAAA;AACA,IAAAQ,aAAA,GAAAN,sBAAA,CAAAF,OAAA;AACA,IAAAS,IAAA,GAAAT,OAAA;AACA,IAAAU,QAAA,GAAAV,OAAA;AACA,IAAAW,MAAA,GAAAX,OAAA;AACA,IAAAY,MAAA,GAAAZ,OAAA;AACA,IAAAa,QAAA,GAAAX,sBAAA,CAAAF,OAAA;AACA,IAAAc,MAAA,GAAAd,OAAA;AACA,IAAAe,cAAA,GAAAb,sBAAA,CAAAF,OAAA;AAAoD,SAAAE,uBAAAc,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAEpD;AACA;AACA;AACA;AACe,eAAeG,UAAUA,CAAA,EAAG;EACzC,MAAMC,SAAS,GAAG,IAAAC,SAAG,EAACC,sBAAO,CAAC;EAC9B,MAAMC,cAAc,GAAG;IAAEC,QAAQ,EAAEC,iBAAQ,CAACC,MAAM;IAAEC,KAAK,EAAEC;EAAQ,CAAC;EAEpEC,gBAAO,CAACC,IAAI,CAAC,CAAC;EAEd,MAAMC,OAAO,GAAG,IAAAC,mBAAY,EAAC,CAAC;EAC9B,MAAM,IAAAC,sBAAa,EAACF,OAAO,CAAC;EAE5B,OAAO,IAAAG,wBAAS,EAACd,SAAS,CAACe,IAAI,CAAC,IAAIC,qBAAY,CAAC,CAAC,CAAC,CAAC,CACjDC,IAAI,CAAC,MAAM,IAAAC,cAAS,EAACC,oBAAW,EAAEhB,cAAc,CAAC,CAAC,CAClDiB,KAAK,CAAEC,GAAG,IAAK;IACd,IAAIA,GAAG,CAACC,UAAU,KAAKC,8BAAW,CAACC,gBAAgB,EAAE;MACnD,MAAMC,QAAQ,GAAG,EAAE;MACnB,MAAMC,UAAU,GAAG,GAAG;MAEtB,IAAIC,KAAK,GAAG,CAAC;MACb,MAAMC,WAAW,GAAGA,CAAA,KAAM;QACxBD,KAAK,EAAE;QAEP,OAAO,IAAAE,eAAU,EAACV,oBAAW,EAAE;UAC7BW,IAAI,EAAE,SAAS;UACfvB,KAAK,EAAEJ;QACT,CAAC,CAAC,CAACc,IAAI,CAAC,OAAO;UAAEc;QAAgB,CAAC,KAAK;UACrC,IAAIA,eAAe,CAAC,CAAC,CAAC,CAACxB,KAAK,CAACyB,MAAM,GAAG,CAAC,EAAE;YACvC,IAAIL,KAAK,GAAGF,QAAQ,EAAE;cACpBQ,gBAAM,CAACC,KAAK,CAAC,kDAAkDR,UAAU,IAAI,CAAC;cAE9E,MAAM,IAAAS,YAAK,EAACT,UAAU,CAAC;cACvB,OAAOE,WAAW,CAAC,CAAC;YACtB;YAEA,MAAM,IAAIQ,KAAK,CAAC,qDAAqD,CAAC;UACxE;UAEA,OAAO,IAAI;QACb,CAAC,CAAC;MACJ,CAAC;MAED,OAAOR,WAAW,CAAC,CAAC,CAACX,IAAI,CAAC,MAAMgB,gBAAM,CAACC,KAAK,CAAC,8BAA8BP,KAAK,EAAE,CAAC,CAAC;IACtF;IAEA,MAAMN,GAAG;EACX,CAAC,CAAC,CACDJ,IAAI,CAACoB,iBAAU,EAAEC,sBAAe,CAAC;AACtC;AAEAvC,UAAU,CAACwC,WAAW,GAAG,kDAAkD","ignoreList":[]}