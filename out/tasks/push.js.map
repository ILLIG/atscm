{"version":3,"file":"push.js","names":["_gulplog","_interopRequireDefault","require","_opcua_status_code","_nodeclass","_src","_api","_Transformer","_interopRequireWildcard","_NodeId","_Node","_log","_ProjectConfig","_tasks","_Session","_checkServerscripts","_checkAtserver","_hooks","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","ownKeys","keys","getOwnPropertySymbols","filter","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","value","configurable","writable","_toPrimitive","Symbol","toPrimitive","TypeError","String","Number","openInBuilderStatus","Set","StatusCodes","BadUserAccessDenied","BadNotWritable","ignoredReferences","ReferenceTypeIds","toParent","HasTypeDefinition","performPush","path","options","applyTransforms","Transformer","combinedTransformer","ProjectConfig","useTransformers","TransformDirection","FromFilesystem","ensureReferences","node","references","reduce","result","key","assign","map","s","addReferences","nodeId","then","outputArguments","failures","Error","join","Logger","debug","catch","err","Promise","resolve","create","NodeId","parentNodeId","parent","createNode","name","nodeClass","typeDefinition","modellingRule","reference","ReferenceTypeNames","getSingle","NodeClass","Variable","variantValue","createdNode","createFailed","warn","src","readNodeFile","reverse","undefined","handleNode","writeNode","statusCode","Good","BadNodeIdUnknown","Session","pool","context","setupContext","version","atserverVersion","checkAtserver","checkServerscripts","promise","reportProgress","getter","browser","_pushedPath","size","formatter","count","finishTask","handleTaskError","description"],"sources":["../../src/tasks/push.js"],"sourcesContent":["import Logger from 'gulplog';\r\nimport { StatusCodes } from 'node-opcua/lib/datamodel/opcua_status_code';\r\nimport { NodeClass } from 'node-opcua/lib/datamodel/nodeclass';\r\nimport src from '../lib/gulp/src';\r\nimport { writeNode, createNode, addReferences } from '../api';\r\nimport Transformer, { TransformDirection } from '../lib/transform/Transformer.js';\r\nimport NodeId from '../lib/model/opcua/NodeId.js';\r\nimport { ReferenceTypeIds, ReferenceTypeNames } from '../lib/model/Node';\r\nimport { reportProgress } from '../lib/helpers/log.js';\r\nimport ProjectConfig from '../config/ProjectConfig.js';\r\nimport { finishTask, handleTaskError } from '../lib/helpers/tasks.js';\r\nimport Session from '../lib/server/Session.js';\r\nimport checkServerscripts from '../hooks/check-serverscripts';\r\nimport checkAtserver from '../hooks/check-atserver';\r\nimport { setupContext } from '../hooks/hooks';\r\n\r\n/**\r\n * Status codes indicating a node is opened in atvise builder and therefore not writable right now.\r\n * @type {Set<node-opcua~StatusCodes>}\r\n */\r\nconst openInBuilderStatus = new Set([StatusCodes.BadUserAccessDenied, StatusCodes.BadNotWritable]);\r\n\r\n/**\r\n * The reference types ignored when adding references. The corresponding references are created\r\n * alongside the node itself using the 'CreateNode' server script.\r\n * @type {Set<node-opcua~ReferenceTypeId>}\r\n */\r\nconst ignoredReferences = new Set([\r\n  ReferenceTypeIds.toParent,\r\n  ReferenceTypeIds.HasTypeDefinition,\r\n  // ReferenceTypeIds.HasModellingRule,\r\n]);\r\n\r\n/**\r\n * Pushes the given path to the server.\r\n * @param {string} path The local path to push.\r\n * @param {Object} options Options passed to {@link src}.\r\n */\r\nexport function performPush(path, options) {\r\n  const applyTransforms = Transformer.combinedTransformer(\r\n    ProjectConfig.useTransformers,\r\n    TransformDirection.FromFilesystem\r\n  );\r\n\r\n  const ensureReferences = (node) => {\r\n    const references = [...node.references].reduce((result, [key, value]) => {\r\n      if (ignoredReferences.has(key)) {\r\n        return result;\r\n      }\r\n\r\n      return Object.assign(result, {\r\n        [key]: [...value].map((s) => (typeof s === 'string' ? `ns=1;s=${s}` : s)),\r\n      });\r\n    }, {});\r\n\r\n    if (Object.keys(references).length > 0) {\r\n      return addReferences(node.nodeId, references)\r\n        .then(({ outputArguments }) => {\r\n          const [{ value: failures }] = outputArguments[3].value;\r\n\r\n          if (failures) {\r\n            throw new Error(\r\n              `Failed to create reference(s) from ${node.nodeId} to ${failures.join(', ')}`\r\n            );\r\n          } else {\r\n            Logger.debug(`Added ${Object.keys(references).length} reference(s) to ${node.nodeId}`);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          throw Object.assign(err, { node });\r\n        });\r\n    }\r\n\r\n    return Promise.resolve();\r\n  };\r\n\r\n  const create = (node) => {\r\n    const nodeId = new NodeId(node.nodeId);\r\n    let parentNodeId = node.parent && node.parent.nodeId;\r\n\r\n    if (!node.parent) {\r\n      parentNodeId = nodeId.parent;\r\n      Logger.debug(`Assuming ${parentNodeId} as parent of ${node.nodeId}`);\r\n    }\r\n\r\n    return createNode(nodeId, {\r\n      name: node.name,\r\n      parentNodeId,\r\n      nodeClass: node.nodeClass,\r\n      typeDefinition: node.typeDefinition,\r\n      modellingRule: node.modellingRule,\r\n      reference: ReferenceTypeNames[node.references.getSingle(ReferenceTypeIds.toParent)],\r\n      value:\r\n        node.nodeClass && node.nodeClass.value === NodeClass.Variable.value && node.variantValue,\r\n    })\r\n      .then(({ outputArguments }) => {\r\n        const [{ value: createdNode }, { value: createFailed }] = outputArguments[3].value;\r\n\r\n        if (createFailed) {\r\n          Logger.warn('Failed to create node', node.nodeId);\r\n          return Promise.resolve();\r\n        } else if (createdNode) {\r\n          Logger.debug('Created node', node.nodeId);\r\n        } else {\r\n          // Node already existed\r\n        }\r\n\r\n        return ensureReferences(node);\r\n      })\r\n      .catch((err) => {\r\n        throw Object.assign(err, { node });\r\n      });\r\n  };\r\n\r\n  return src(path, {\r\n    ...options,\r\n    readNodeFile(node) {\r\n      const r = ProjectConfig.useTransformers\r\n        .reverse()\r\n        .reduce((result, t) => (result === undefined ? t.readNodeFile(node) : result), undefined);\r\n      return r === undefined ? true : r;\r\n    },\r\n    async handleNode(node) {\r\n      // NOTE: context = this\r\n      await applyTransforms(node, this);\r\n\r\n      if (node.push === false) {\r\n        // Skip write\r\n        return false;\r\n      }\r\n\r\n      // Create / write node\r\n      if (node.nodeClass.value !== NodeClass.Variable.value) {\r\n        return create(node);\r\n      }\r\n\r\n      // console.error('write', node.nodeId, node.value);\r\n      return writeNode(`ns=1;s=${node.nodeId}`, node.variantValue).then(\r\n        () => ensureReferences(node),\r\n        (err) => {\r\n          if (openInBuilderStatus.has(err.statusCode)) {\r\n            Logger.warn(`Error writing node ${node.nodeId}\r\n    - Make sure it is not opened in atvise builder\r\n    - Make sure the corresponding datasource is connected`);\r\n            return StatusCodes.Good;\r\n          }\r\n\r\n          if (err.statusCode === StatusCodes.BadNodeIdUnknown) {\r\n            Logger.debug(`Node ${node.nodeId} does not exist: Attempting to create it...`);\r\n\r\n            return create(node);\r\n          }\r\n\r\n          throw Object.assign(err, { node });\r\n        }\r\n      );\r\n    },\r\n  });\r\n}\r\n\r\n/**\r\n * Pushes {@link AtviseFile}s to atvise server.\r\n */\r\nexport default async function push() {\r\n  Session.pool();\r\n\r\n  const context = setupContext();\r\n\r\n  const { version: atserverVersion } = await checkAtserver(context);\r\n  await checkServerscripts(context);\r\n\r\n  const promise = performPush('./src', { atserverVersion });\r\n\r\n  return reportProgress(promise, {\r\n    getter: () => promise.browser._pushedPath.size,\r\n    formatter: (count) => `Processed ${count} files`,\r\n  }).then(finishTask, handleTaskError);\r\n}\r\n\r\npush.description = 'Push all stored nodes to atvise server';\r\n"],"mappings":"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","ignoreList":[]}