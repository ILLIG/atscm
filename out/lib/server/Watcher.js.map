{"version":3,"file":"Watcher.js","names":["_events","_interopRequireDefault","require","_client_subscription","_read_service","_nodeclass","_gulplog","_ProjectConfig","_log","_Session","_NodeBrowser","e","__esModule","default","Watcher","Emitter","constructor","nodes","ProjectConfig","nodesToWatch","_nodeBrowser","NodeBrowser","handleNode","_subscribe","bind","reportProgress","browse","getter","_pushed","formatter","count","then","emit","catch","err","subscriptionStarted","_setupSubscription","Session","create","session","Promise","resolve","reject","_session","subscription","ClientSubscription","requestedPublishingInterval","requestedLifetimeCount","requestedMaxKeepAliveCount","maxNotificationsPerPublish","publishingEnabled","priority","on","node","nodeClass","NodeClass","Variable","undefined","nodeId","id","item","monitor","attributeId","AttributeIds","Value","clientHandle","samplingInterval","queueSize","discardOldest","timeout","setTimeout","Logger","debug","value","terminate","warn","once","clearTimeout","_handleChange","Error","Object","assign","dataValue","mtime","serverTimestamp","close","exports"],"sources":["../../../src/lib/server/Watcher.js"],"sourcesContent":["/* eslint-plugin-jsdoc does not recognize the \"emits\" tag */\r\n/* eslint-disable jsdoc/check-tag-names */\r\n\r\n/* Needed as long as https://github.com/gajus/eslint-plugin-jsdoc/issues/56 is open */\r\n/* eslint-disable jsdoc/check-param-names */\r\n\r\nimport Emitter from 'events';\r\nimport { ClientSubscription } from 'node-opcua/lib/client/client_subscription';\r\nimport { AttributeIds } from 'node-opcua/lib/services/read_service';\r\nimport { NodeClass } from 'node-opcua/lib/datamodel/nodeclass';\r\nimport Logger from 'gulplog';\r\nimport ProjectConfig from '../../config/ProjectConfig';\r\nimport { reportProgress } from '../helpers/log';\r\nimport Session from './Session';\r\nimport NodeBrowser from './NodeBrowser';\r\n\r\n/**\r\n * Watches the given nodes for value changes.\r\n * @emit {ReadStream.ReadResult} Emits `change` events when a watched node changes.\r\n */\r\nexport default class Watcher extends Emitter {\r\n  /**\r\n   * Creates a new Watcher with the given nodes.\r\n   * @param {NodeId[]} nodes The nodes to watch (recursively).\r\n   */\r\n  constructor(nodes = ProjectConfig.nodesToWatch) {\r\n    super();\r\n\r\n    /**\r\n     * The browser used to subscribe to server nodes.\r\n     * @type {NodeBrowser}\r\n     */\r\n    this._nodeBrowser = new NodeBrowser({\r\n      handleNode: this._subscribe.bind(this),\r\n    });\r\n\r\n    reportProgress(this._nodeBrowser.browse(nodes), {\r\n      getter: () => this._nodeBrowser._pushed,\r\n      formatter: (count) => `Subscribed to ${count} nodes`,\r\n    })\r\n      .then(() => this.emit('ready'))\r\n      .catch((err) => this.emit('error', err));\r\n\r\n    /**\r\n     * Resolved once the server subscription is set up.\r\n     * @type {Promise<any>}\r\n     */\r\n    this.subscriptionStarted = this._setupSubscription().catch((err) => this.emit('error', err));\r\n  }\r\n\r\n  /**\r\n   * Initializes a server subscription.\r\n   * @return {Promise<node-opcua~ClientSubscription>} A setup subscription.\r\n   */\r\n  _setupSubscription() {\r\n    return Session.create().then(\r\n      (session) =>\r\n        new Promise((resolve, reject) => {\r\n          /** The current session, if connected @type {Session} */\r\n          this._session = session;\r\n\r\n          const subscription = new ClientSubscription(session, {\r\n            requestedPublishingInterval: 100,\r\n            requestedLifetimeCount: 1000,\r\n            requestedMaxKeepAliveCount: 12,\r\n            maxNotificationsPerPublish: 10,\r\n            publishingEnabled: true,\r\n            priority: 10,\r\n          });\r\n\r\n          subscription.on('started', () => resolve(subscription));\r\n          subscription.on('failure', (err) => reject(err));\r\n        })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Subscribes to value changes of a single node.\r\n   * @param {BrowsedNode} node A browsed node.\r\n   */\r\n  async _subscribe(node) {\r\n    if (node.nodeClass !== NodeClass.Variable) {\r\n      return undefined;\r\n    }\r\n    const subscription = await this.subscriptionStarted;\r\n\r\n    const nodeId = node.id;\r\n\r\n    const item = subscription.monitor(\r\n      {\r\n        nodeId,\r\n        attributeId: AttributeIds.Value,\r\n      },\r\n      {\r\n        clientHandle: 13,\r\n        samplingInterval: 250,\r\n        queueSize: 123,\r\n        discardOldest: true,\r\n      }\r\n    );\r\n\r\n    return new Promise((resolve, reject) => {\r\n      // Sometimes the changed event is not emitted...\r\n      // Fixes #202\r\n      const timeout = setTimeout(() => {\r\n        Logger.debug(`Error monitoring '${nodeId.value}': Did not receive initial value. Retry...`);\r\n\r\n        try {\r\n          item.terminate();\r\n        } catch (e) {\r\n          Logger.warn('Failed to terminate subscription', e);\r\n        }\r\n\r\n        return this._subscribe(node).then(resolve, reject);\r\n      }, 1000);\r\n\r\n      item.once('changed', () => {\r\n        clearTimeout(timeout);\r\n        item.on(\r\n          'changed',\r\n          this._handleChange.bind(this, {\r\n            nodeId,\r\n          })\r\n        );\r\n\r\n        resolve();\r\n      });\r\n      item.on('err', (err) => {\r\n        clearTimeout(timeout);\r\n        reject(err instanceof Error ? err : new Error(err));\r\n      });\r\n    }).catch((err) => {\r\n      throw Object.assign(err, { node });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Called once a change has been detected and emits a 'change' or 'delete' event.\r\n   * @param {Object} node The node that changed.\r\n   * @param {?node-opcua~Variant} dataValue The current value.\r\n   */\r\n  _handleChange({ nodeId }, dataValue) {\r\n    this.emit(dataValue.value ? 'change' : 'delete', {\r\n      // nodeClass,\r\n      nodeId,\r\n      value: dataValue.value,\r\n      mtime: dataValue.serverTimestamp,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Ends monitoring nodes.\r\n   */\r\n  close() {\r\n    if (this._session) {\r\n      Session.close(this._session).catch((err) => this.emit('error', err));\r\n    }\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]}