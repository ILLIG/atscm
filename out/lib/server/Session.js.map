{"version":3,"file":"Session.js","names":["_path","require","_events","_interopRequireDefault","_nodeOpcua","_gulplog","_ProjectConfig","_async","e","__esModule","default","openSessions","Set","openingSessions","Session","_create","client","OPCUAClient","create","requestedSessionTimeout","keepSessionAlive","certificateFile","join","__dirname","privateKeyFile","endpoint_must_exist","endpoint","ProjectConfig","host","port","opc","timer","setTimeout","Logger","warn","timeout","promisified","cb","connect","debug","clearTimeout","session","createSession","userName","login","username","password","catch","err","includes","message","response","responseHeader","serviceResult","StatusCodes","BadUserAccessDenied","Error","add","Object","assign","_emitter","Emitter","c","then","s","delete","_pool","_createShared","pool","_close","Promise","resolve","close","_client","disconnect","ClientSession","reject","open","Array","from","closeOpen","all","map","exports"],"sources":["../../../src/lib/server/Session.js"],"sourcesContent":["import { join } from 'path';\r\nimport Emitter from 'events';\r\nimport { StatusCodes } from 'node-opcua';\r\nimport { OPCUAClient, ClientSession } from 'node-opcua';\r\nimport Logger from 'gulplog';\r\nimport ProjectConfig from '../../config/ProjectConfig';\r\nimport { promisified } from '../helpers/async';\r\n\r\n/**\r\n * The currently open sessions.\r\n * @type {Set<node-opcua~ClientSession>}\r\n */\r\nconst openSessions = new Set();\r\n\r\n/**\r\n * The sessions currentyl being opened.\r\n * @type {Set<node-opcua~ClientSession>}\r\n */\r\nconst openingSessions = new Set();\r\n\r\n/**\r\n * A wrapper around {@link node-opcua~ClientSession} used to connect to atvise server.\r\n * The sessions currentyl being opened.\r\n * @type {Set<node-opcua~ClientSession>}\r\n */\r\nexport default class Session {\r\n  /**\r\n   * Creates an {@link node-opcuaOPCUAClient} and opens a new  {@link node-opcua~ClientSession}.\r\n   * @return {Promise<node-opcua~ClientSession, Error>} Fulfilled with an already opened\r\n   * {@link node-opcua~ClientSession}.\r\n   */\r\n  static async _create() {\r\n    const client = OPCUAClient.create({\r\n      requestedSessionTimeout: 600000,\r\n      keepSessionAlive: true,\r\n      certificateFile: join(__dirname, '../../../res/certificates/certificate.pem'),\r\n      privateKeyFile: join(__dirname, '../../../res/certificates/key.pem'),\r\n      endpoint_must_exist: false\r\n    });\r\n\r\n    const endpoint = `opc.tcp://${ProjectConfig.host}:${ProjectConfig.port.opc}`;\r\n\r\n    const timer = setTimeout(() => {\r\n      Logger.warn(`It takes unusually long to connect to the atvise server at ${endpoint}.\r\n - Are you sure it is running?`);\r\n    }, ProjectConfig.timeout);\r\n\r\n    await promisified((cb) => client.connect(endpoint, cb));\r\n    Logger.debug(`Connected to ${endpoint}`);\r\n    clearTimeout(timer);\r\n\r\n    const session = await promisified((cb) =>\r\n      client.createSession(\r\n        {\r\n          userName: ProjectConfig.login.username,\r\n          password: ProjectConfig.login.password,\r\n        },\r\n        cb\r\n      )\r\n    ).catch((err) => {\r\n      if (\r\n        [\r\n          'userName === null || typeof userName === \"string\"',\r\n          'password === null || typeof password === \"string\"',\r\n        ].includes(err.message) ||\r\n        (err.response &&\r\n          err.response.responseHeader.serviceResult === StatusCodes.BadUserAccessDenied)\r\n      ) {\r\n        throw new Error('Unable to create session: Invalid login');\r\n      }\r\n\r\n      throw err;\r\n    });\r\n\r\n    openSessions.add(session);\r\n    return Object.assign(session, { _emitter: new Emitter() });\r\n  }\r\n\r\n  /**\r\n   * Creates an {@link node-opcuaOPCUAClient} and opens a new  {@link node-opcua~ClientSession}. If\r\n   * pooling is active, the shared session will be reused.\r\n   * @return {Promise<node-opcua~ClientSession, Error>} Fulfilled with an already opened\r\n   * {@link node-opcua~ClientSession}.\r\n   */\r\n  static create() {\r\n    const create = () => {\r\n      const c = this._create();\r\n      openingSessions.add(c);\r\n\r\n      return c.then((s) => openingSessions.delete(c) && s);\r\n    };\r\n\r\n    if (!this._pool) {\r\n      return create();\r\n    }\r\n\r\n    if (!this._createShared) {\r\n      /**\r\n       * A promise that resolves once the shared session is created.\r\n       * @type {Promise<node-opcua~ClientSession}\r\n       */\r\n      this._createShared = create();\r\n    }\r\n\r\n    return this._createShared;\r\n  }\r\n\r\n  // eslint-disable-next-line jsdoc/require-description-complete-sentence\r\n  /**\r\n   * Starts pooling (reusing) sessions. Note that you'll have to manually close sessions using\r\n   * {@link Session.closeOpen}.\r\n   */\r\n  static pool() {\r\n    /**\r\n     * If sessions should be reused.\r\n     * @type {boolean}\r\n     */\r\n    this._pool = true;\r\n  }\r\n\r\n  /**\r\n   * Closes the given session. Waits for currently opening sessions to open.\r\n   * @param {node-opcua~ClientSession} session The session to close.\r\n   * @return {Promise<node-opcua~ClientSession, Error>} Fulfilled with the (now closed!) session or\r\n   * rejected with the error that occured while closing.\r\n   */\r\n  static async _close(session) {\r\n    openSessions.delete(session);\r\n\r\n    await new Promise((resolve) => session.close(true, () => resolve()));\r\n    await new Promise((resolve) => session._client && session._client.disconnect(() => resolve()));\r\n\r\n    return session;\r\n  }\r\n\r\n  /**\r\n   * Closes the given session. When session pooling is active the session won't actually be closed\r\n   * and the returned Promise will resolve immediately.\r\n   * @param {node-opcua~ClientSession} session The session to close.\r\n   * @return {Promise<node-opcua~ClientSession, Error>} Fulfilled with the (maybe closed) session or\r\n   * rejected with the error that occured while closing.\r\n   */\r\n  static close(session) {\r\n    if (!session || !(session instanceof ClientSession)) {\r\n      return Promise.reject(new Error('session is required'));\r\n    }\r\n\r\n    if (this._pool) {\r\n      return Promise.resolve();\r\n    }\r\n\r\n    return this._close(session);\r\n  }\r\n\r\n  /**\r\n   * The sessions currently open. Starting with version 1.0.0-beta.25 there will be one at most.\r\n   * @type {Session[]}\r\n   */\r\n  static get open() {\r\n    return Array.from(openSessions);\r\n  }\r\n\r\n  /**\r\n   * Closes all open sessions.\r\n   * @return {Promise<Error, Session[]>} Rejected with the error that occurred while closing the\r\n   * sessions or fulfilled with the (now closed) sessions affected.\r\n   */\r\n  static async closeOpen() {\r\n    await Promise.all(openingSessions);\r\n\r\n    return Promise.all(Array.from(openSessions).map((session) => this._close(session)));\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]}