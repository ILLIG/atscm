{"version":3,"file":"WaitingStream.js","names":["_gulplog","_interopRequireDefault","require","_ProjectConfig","_QueueStream","e","__esModule","default","waitForDependencies","Stream","Waiting","constructor","options","_dependencies","_waitingFor","_finishedProcessing","on","file","key","nodeId","toString","dependents","forEach","d","k","_enqueueChunk","emit","dependenciesFor","Error","dependencies","filter","id","namespace","value","ProjectConfig","nodes","includes","match","map","length","needToWait","reduce","wait","dependency","name","concat","_flush","callback","checkProcessing","_processing","hasPending","once","Object","keys","first","Logger","debug","exports","WaitingStream","QueueStream"],"sources":["../../../src/lib/server/WaitingStream.js"],"sourcesContent":["import Logger from 'gulplog';\r\nimport ProjectConfig from '../../config/ProjectConfig';\r\nimport QueueStream from './QueueStream';\r\n\r\n/**\r\n * A mixin that transforms a regular stream into a {@link WaitingStream}, which makes it wait for a\r\n * node's dependencies to be transformed.\r\n * @param {QueueStream} Stream The node stream to inherit from.\r\n * @return {Class<WaitingStream>} The resulting stream class.\r\n * @example <caption>Basic usage</caption>\r\n * import QueueStream from 'atscm/src/lib/server/QueueStream';\r\n * import { waitForDependencies } from 'atscm/src/lib/server/WaitingStream';\r\n *\r\n * class MyWaitingStream extends waitForDependencies(QueueStream) {\r\n *\r\n *   dependenciesFor(file) {\r\n *     return [\r\n *       // An array of node ids\r\n *     ];\r\n *   }\r\n *\r\n * }\r\n */\r\nexport const waitForDependencies = (Stream) =>\r\n  class Waiting extends Stream {\r\n    /**\r\n     * Creates a new WaitingStream.\r\n     * @param {Object} options Options passed to the underlying {@link Stream} subclass.\r\n     */\r\n    constructor(options = {}) {\r\n      super(options);\r\n\r\n      this._dependencies = {};\r\n      this._waitingFor = {};\r\n      this._finishedProcessing = {};\r\n\r\n      this.on('processed-chunk', (file) => {\r\n        const key = file.nodeId.toString();\r\n        const dependents = this._waitingFor[key];\r\n        delete this._waitingFor[key];\r\n        this._finishedProcessing[key] = true;\r\n\r\n        if (dependents) {\r\n          dependents.forEach((d) => {\r\n            const k = d.nodeId.toString();\r\n            this._dependencies[k] -= 1;\r\n\r\n            if (this._dependencies[k] === 0) {\r\n              super._enqueueChunk(d);\r\n              delete this._dependencies[k];\r\n            }\r\n          });\r\n        }\r\n\r\n        this.emit('finished-chunk');\r\n      });\r\n    }\r\n\r\n    /**\r\n     * **Must be implemented by all subclasses:** Returns the dependencies for a given file.\r\n     * @typedef {function(file: AtviseFile): NodeId[]} WWaiting#dependenciesFor\r\n     * @param {AtviseFile} file The file to get the dependencies for.\r\n     * @return {NodeId[]} The file's dependencies.\r\n     * @abstract\r\n     */\r\n    // eslint-disable-next-line no-unused-vars\r\n    dependenciesFor(file) {\r\n      throw new Error('#dependenciesFor must be implemented by all subclasses');\r\n    }\r\n\r\n    /**\r\n     * Enqueues a file after it's dependencies.\r\n     * @param {AtviseFile} file The file to process.\r\n     */\r\n    _enqueueChunk(file) {\r\n      const dependencies = this.dependenciesFor(file)\r\n        .filter((id) => {\r\n          if (id.namespace === 0 || !id.value || ProjectConfig.nodes.includes(id)) {\r\n            return false;\r\n          }\r\n\r\n          return (\r\n            !id.value.match(/^(Object|Variable)Types$/) &&\r\n            !id.value.match(/^(Object|Variable)Types\\.ATVISE/) &&\r\n            !id.value.match(/^SYSTEM\\.LIBRARY\\.ATVISE/)\r\n          );\r\n        })\r\n        .map((id) => id.toString());\r\n\r\n      if (dependencies && dependencies.length) {\r\n        const needToWait = dependencies.reduce((wait, dependency) => {\r\n          if (!this._finishedProcessing[dependency]) {\r\n            const name = file.nodeId.toString();\r\n\r\n            this._waitingFor[dependency] = (this._waitingFor[dependency] || []).concat(file);\r\n            this._dependencies[name] = (this._dependencies[name] || 0) + 1;\r\n\r\n            return true;\r\n          }\r\n          return wait;\r\n        }, false);\r\n\r\n        if (needToWait) {\r\n          return;\r\n        }\r\n      }\r\n\r\n      super._enqueueChunk(file);\r\n    }\r\n\r\n    /**\r\n     * Delays the streams end until all chunks have been processed.\r\n     * @param {function(err: Error)} callback Called once all chunks have been processed.\r\n     */\r\n    _flush(callback) {\r\n      const checkProcessing = () => {\r\n        if (this._processing || this.hasPending) {\r\n          this.once('finished-chunk', () => checkProcessing());\r\n        } else if (Object.keys(this._waitingFor).length > 0) {\r\n          const first = Object.keys(this._waitingFor)[0];\r\n\r\n          Logger.debug(`Missing dependency. Trying to process dependents of ${first}`);\r\n\r\n          this.once('finished-chunk', () => checkProcessing());\r\n          this.emit('processed-chunk', { nodeId: first });\r\n        } else {\r\n          super._flush(callback);\r\n        }\r\n      };\r\n\r\n      checkProcessing();\r\n    }\r\n  };\r\n\r\n/**\r\n * A {@link QueueStream} that waits for a file's dependencies to be processed before the file is\r\n * processed itself.\r\n * @abstract\r\n */\r\nexport default class WaitingStream extends waitForDependencies(QueueStream) {}\r\n"],"mappings":"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","ignoreList":[]}