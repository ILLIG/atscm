{"version":3,"file":"CallScriptStream.js","names":["_variant","require","_opcua_status_code","_NodeId","_interopRequireDefault","_CallMethodStream","e","__esModule","default","CallScriptStream","CallMethodStream","methodId","NodeId","NodeIdType","STRING","scriptId","Error","scriptBaseId","parent","scriptParameters","file","inputArguments","params","paramNames","Object","keys","dataType","DataType","value","String","arrayType","VariantArrayType","Array","Variant","map","key","processErrorMessage","relative","processChunk","handleErrors","err","status","success","processedStatus","atscmScript","match","StatusCodes","BadMethodInvalid","description","exports"],"sources":["../../../../src/lib/server/scripts/CallScriptStream.js"],"sourcesContent":["import { DataType, VariantArrayType } from 'node-opcua/lib/datamodel/variant';\r\nimport { StatusCodes } from 'node-opcua/lib/datamodel/opcua_status_code';\r\nimport NodeId from '../../model/opcua/NodeId';\r\nimport CallMethodStream from './CallMethodStream';\r\n\r\n/**\r\n * A stream that calls atvise server scripts for all passed nodes.\r\n * @abstract\r\n */\r\nexport default class CallScriptStream extends CallMethodStream {\r\n  /**\r\n   * The id of the *callScript* method.\r\n   * @type {NodeId}\r\n   */\r\n  get methodId() {\r\n    return new NodeId(NodeId.NodeIdType.STRING, 'AGENT.SCRIPT.METHODS.callScript', 1);\r\n  }\r\n\r\n  /**\r\n   * **Must be implemented by all subclasses:** The id of the script to call.\r\n   * @type {NodeId}\r\n   * @abstract\r\n   */\r\n  get scriptId() {\r\n    throw new Error('Must be implemented by all subclasses');\r\n  }\r\n\r\n  /**\r\n   * Id of the script's base object.\r\n   * @type {NodeId}\r\n   */\r\n  get scriptBaseId() {\r\n    return this.scriptId.parent;\r\n  }\r\n\r\n  /**\r\n   * Returns the parameters to call the script with for the given file.\r\n   * @param {AtviseFile} file The processed file.\r\n   * @return {Object} The parameters passed to the script.\r\n   */\r\n  // eslint-disable-next-line no-unused-vars\r\n  scriptParameters(file) {\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * Creates the raw method input arguments for the given file.\r\n   * @param {AtviseFile} file The processed file.\r\n   * @return {?node-opcua~Variant[]} Input arguments for the *callScript* method.\r\n   */\r\n  inputArguments(file) {\r\n    const params = this.scriptParameters(file);\r\n\r\n    if (params === null) {\r\n      return null;\r\n    }\r\n\r\n    const paramNames = Object.keys(params);\r\n\r\n    return [\r\n      {\r\n        dataType: DataType.NodeId,\r\n        value: this.scriptId,\r\n      },\r\n      {\r\n        dataType: DataType.NodeId,\r\n        value: this.scriptBaseId,\r\n      },\r\n      {\r\n        dataType: DataType.String,\r\n        arrayType: VariantArrayType.Array,\r\n        value: paramNames,\r\n      },\r\n      {\r\n        dataType: DataType.Variant,\r\n        arrayType: VariantArrayType.Array,\r\n        value: paramNames.map((key) => params[key]),\r\n      },\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * Returns the error message logged if running the script fails.\r\n   * @param {AtviseFile} file The processed file.\r\n   * @return {string} The resulting error message.\r\n   */\r\n  processErrorMessage(file) {\r\n    return `Error running script ${this.scriptId} for ${file.relative}`;\r\n  }\r\n\r\n  /**\r\n   * Calls the script specified in {@link CallScriptStream#scriptId}. If the script does not exist\r\n   * but could be imported by running `atscm import` a special status description is returned.\r\n   * @param {vinyl~File} file The file being processed.\r\n   * @param {function(err: Error, status: node-opcua~StatusCodes, success: function)} handleErrors\r\n   * The error handler to call. See {@link QueueStream#processChunk} for details.\r\n   */\r\n  processChunk(file, handleErrors) {\r\n    super.processChunk(file, (err, status, success) => {\r\n      const processedStatus = status;\r\n\r\n      const atscmScript = this.scriptId.value.match(/SERVERSCRIPTS\\.atscm\\.(.*)/);\r\n      if (status === StatusCodes.BadMethodInvalid && atscmScript) {\r\n        processedStatus.description = `The '${atscmScript[1]}' script does not exist.\r\n- Did you forget to run 'atscm import'?`;\r\n      }\r\n\r\n      handleErrors(err, processedStatus, success);\r\n    });\r\n  }\r\n}\r\n"],"mappings":";;;;;;AAAA,IAAAA,QAAA,GAAAC,OAAA;AACA,IAAAC,kBAAA,GAAAD,OAAA;AACA,IAAAE,OAAA,GAAAC,sBAAA,CAAAH,OAAA;AACA,IAAAI,iBAAA,GAAAD,sBAAA,CAAAH,OAAA;AAAkD,SAAAG,uBAAAE,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAElD;AACA;AACA;AACA;AACe,MAAMG,gBAAgB,SAASC,yBAAgB,CAAC;EAC7D;AACF;AACA;AACA;EACE,IAAIC,QAAQA,CAAA,EAAG;IACb,OAAO,IAAIC,eAAM,CAACA,eAAM,CAACC,UAAU,CAACC,MAAM,EAAE,iCAAiC,EAAE,CAAC,CAAC;EACnF;;EAEA;AACF;AACA;AACA;AACA;EACE,IAAIC,QAAQA,CAAA,EAAG;IACb,MAAM,IAAIC,KAAK,CAAC,uCAAuC,CAAC;EAC1D;;EAEA;AACF;AACA;AACA;EACE,IAAIC,YAAYA,CAAA,EAAG;IACjB,OAAO,IAAI,CAACF,QAAQ,CAACG,MAAM;EAC7B;;EAEA;AACF;AACA;AACA;AACA;EACE;EACAC,gBAAgBA,CAACC,IAAI,EAAE;IACrB,OAAO,CAAC,CAAC;EACX;;EAEA;AACF;AACA;AACA;AACA;EACEC,cAAcA,CAACD,IAAI,EAAE;IACnB,MAAME,MAAM,GAAG,IAAI,CAACH,gBAAgB,CAACC,IAAI,CAAC;IAE1C,IAAIE,MAAM,KAAK,IAAI,EAAE;MACnB,OAAO,IAAI;IACb;IAEA,MAAMC,UAAU,GAAGC,MAAM,CAACC,IAAI,CAACH,MAAM,CAAC;IAEtC,OAAO,CACL;MACEI,QAAQ,EAAEC,iBAAQ,CAACf,MAAM;MACzBgB,KAAK,EAAE,IAAI,CAACb;IACd,CAAC,EACD;MACEW,QAAQ,EAAEC,iBAAQ,CAACf,MAAM;MACzBgB,KAAK,EAAE,IAAI,CAACX;IACd,CAAC,EACD;MACES,QAAQ,EAAEC,iBAAQ,CAACE,MAAM;MACzBC,SAAS,EAAEC,yBAAgB,CAACC,KAAK;MACjCJ,KAAK,EAAEL;IACT,CAAC,EACD;MACEG,QAAQ,EAAEC,iBAAQ,CAACM,OAAO;MAC1BH,SAAS,EAAEC,yBAAgB,CAACC,KAAK;MACjCJ,KAAK,EAAEL,UAAU,CAACW,GAAG,CAAEC,GAAG,IAAKb,MAAM,CAACa,GAAG,CAAC;IAC5C,CAAC,CACF;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,mBAAmBA,CAAChB,IAAI,EAAE;IACxB,OAAO,wBAAwB,IAAI,CAACL,QAAQ,QAAQK,IAAI,CAACiB,QAAQ,EAAE;EACrE;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,YAAYA,CAAClB,IAAI,EAAEmB,YAAY,EAAE;IAC/B,KAAK,CAACD,YAAY,CAAClB,IAAI,EAAE,CAACoB,GAAG,EAAEC,MAAM,EAAEC,OAAO,KAAK;MACjD,MAAMC,eAAe,GAAGF,MAAM;MAE9B,MAAMG,WAAW,GAAG,IAAI,CAAC7B,QAAQ,CAACa,KAAK,CAACiB,KAAK,CAAC,4BAA4B,CAAC;MAC3E,IAAIJ,MAAM,KAAKK,8BAAW,CAACC,gBAAgB,IAAIH,WAAW,EAAE;QAC1DD,eAAe,CAACK,WAAW,GAAG,QAAQJ,WAAW,CAAC,CAAC,CAAC;AAC5D,wCAAwC;MAClC;MAEAL,YAAY,CAACC,GAAG,EAAEG,eAAe,EAAED,OAAO,CAAC;IAC7C,CAAC,CAAC;EACJ;AACF;AAACO,OAAA,CAAAzC,OAAA,GAAAC,gBAAA","ignoreList":[]}