{"version":3,"file":"async.js","names":["delay","ms","Promise","resolve","setTimeout","exports","promisified","fn","reject","err","data"],"sources":["../../../src/lib/helpers/async.ts"],"sourcesContent":["/**\r\n * Returns a promise that resolves after the given duration.\r\n * @param ms Milliseconds to delay.\r\n * @return A promise resolved after the specified delay.\r\n */\r\nexport const delay = (ms: number): Promise<void> =>\r\n  new Promise((resolve) => setTimeout(() => resolve(), ms));\r\n\r\ntype AsyncCallback<R> = (error?: Error | null, result?: R) => void;\r\n\r\n/**\r\n * Wraps a function with an async callback in a promise.\r\n * @param fn The function to promisify.\r\n */\r\nexport const promisified = <R>(fn: (cb: AsyncCallback<R>) => R): Promise<R> =>\r\n  new Promise((resolve, reject) => {\r\n    fn((err, data) => (err ? reject(err) : resolve(data)));\r\n  });\r\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACO,MAAMA,KAAK,GAAIC,EAAU,IAC9B,IAAIC,OAAO,CAAEC,OAAO,IAAKC,UAAU,CAAC,MAAMD,OAAO,CAAC,CAAC,EAAEF,EAAE,CAAC,CAAC;AAACI,OAAA,CAAAL,KAAA,GAAAA,KAAA;AAI5D;AACA;AACA;AACA;AACO,MAAMM,WAAW,GAAOC,EAA+B,IAC5D,IAAIL,OAAO,CAAC,CAACC,OAAO,EAAEK,MAAM,KAAK;EAC/BD,EAAE,CAAC,CAACE,GAAG,EAAEC,IAAI,KAAMD,GAAG,GAAGD,MAAM,CAACC,GAAG,CAAC,GAAGN,OAAO,CAACO,IAAI,CAAE,CAAC;AACxD,CAAC,CAAC;AAACL,OAAA,CAAAC,WAAA,GAAAA,WAAA","ignoreList":[]}