{"version":3,"file":"ConfigTransformer.js","names":["_nodeOpcua","require","_XMLTransformer","_interopRequireDefault","e","__esModule","default","ConfigTransformer","XMLTransformer","nonEmptyConfig","input","result","key","value","Object","entries","Array","isArray","length","undefined","writeConfigFile","config","node","context","processed","configFile","constructor","splitFile","dataType","DataType","String","arrayType","VariantArrayType","Scalar","JSON","stringify","addNode","exports"],"sources":["../../../src/lib/transform/ConfigTransformer.ts"],"sourcesContent":["import { DataType, VariantArrayType } from 'node-opcua';\r\nimport XMLTransformer from './XMLTransformer';\r\n\r\nexport default class ConfigTransformer<C = Record<string, unknown>> extends XMLTransformer {\r\n  /**\r\n   * Returns an object containing all non-empty properties of the input object. Returns null if no\r\n   * properties are non-empty.\r\n   * @param input The config to process.\r\n   */\r\n  protected nonEmptyConfig(input: C) {\r\n    let result: C | null = null;\r\n\r\n    for (const [key, value] of Object.entries(input)) {\r\n      if (Array.isArray(value) ? value.length > 0 : value !== undefined) {\r\n        result = result || ({} as C);\r\n        result[key] = value;\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Writes the config file to disk if needed.\r\n   * @param config The config to write.\r\n   * @param node The original source node.\r\n   * @param context The current transformer context.\r\n   * @return `true` it the config was actually written.\r\n   */\r\n  protected writeConfigFile(config: C, node, context) {\r\n    const processed = this.nonEmptyConfig(config);\r\n\r\n    if (processed) {\r\n      const configFile = (this.constructor as typeof XMLTransformer).splitFile(node, '.json');\r\n      configFile.value = {\r\n        dataType: DataType.String,\r\n        arrayType: VariantArrayType.Scalar,\r\n        value: JSON.stringify(config, null, '  '),\r\n      };\r\n      context.addNode(configFile);\r\n    }\r\n\r\n    return !!processed;\r\n  }\r\n}\r\n"],"mappings":";;;;;;AAAA,IAAAA,UAAA,GAAAC,OAAA;AACA,IAAAC,eAAA,GAAAC,sBAAA,CAAAF,OAAA;AAA8C,SAAAE,uBAAAC,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAE/B,MAAMG,iBAAiB,SAAsCC,uBAAc,CAAC;EACzF;AACF;AACA;AACA;AACA;EACYC,cAAcA,CAACC,KAAQ,EAAE;IACjC,IAAIC,MAAgB,GAAG,IAAI;IAE3B,KAAK,MAAM,CAACC,GAAG,EAAEC,KAAK,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACL,KAAK,CAAC,EAAE;MAChD,IAAIM,KAAK,CAACC,OAAO,CAACJ,KAAK,CAAC,GAAGA,KAAK,CAACK,MAAM,GAAG,CAAC,GAAGL,KAAK,KAAKM,SAAS,EAAE;QACjER,MAAM,GAAGA,MAAM,IAAK,CAAC,CAAO;QAC5BA,MAAM,CAACC,GAAG,CAAC,GAAGC,KAAK;MACrB;IACF;IAEA,OAAOF,MAAM;EACf;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACYS,eAAeA,CAACC,MAAS,EAAEC,IAAI,EAAEC,OAAO,EAAE;IAClD,MAAMC,SAAS,GAAG,IAAI,CAACf,cAAc,CAACY,MAAM,CAAC;IAE7C,IAAIG,SAAS,EAAE;MACb,MAAMC,UAAU,GAAI,IAAI,CAACC,WAAW,CAA2BC,SAAS,CAACL,IAAI,EAAE,OAAO,CAAC;MACvFG,UAAU,CAACZ,KAAK,GAAG;QACjBe,QAAQ,EAAEC,mBAAQ,CAACC,MAAM;QACzBC,SAAS,EAAEC,2BAAgB,CAACC,MAAM;QAClCpB,KAAK,EAAEqB,IAAI,CAACC,SAAS,CAACd,MAAM,EAAE,IAAI,EAAE,IAAI;MAC1C,CAAC;MACDE,OAAO,CAACa,OAAO,CAACX,UAAU,CAAC;IAC7B;IAEA,OAAO,CAAC,CAACD,SAAS;EACpB;AACF;AAACa,OAAA,CAAA/B,OAAA,GAAAC,iBAAA","ignoreList":[]}