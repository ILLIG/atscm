{"version":3,"file":"ImportStream.js","names":["_variant","require","_gulplog","_interopRequireDefault","_NodeId","_CallMethodStream","e","__esModule","default","scopeId","NodeId","NodeIdType","NUMERIC","ImportStream","CallMethodStream","methodId","inputArguments","file","dataType","DataType","value","XmlElement","contents","processErrorMessage","relative","handleOutputArguments","outputArguments","callback","importStatus","Logger","debug","Error","exports"],"sources":["../../../src/lib/gulp/ImportStream.js"],"sourcesContent":["import { DataType } from 'node-opcua/lib/datamodel/variant';\r\nimport Logger from 'gulplog';\r\nimport NodeId from '../model/opcua/NodeId';\r\nimport CallMethodStream from '../server/scripts/CallMethodStream';\r\n\r\n/**\r\n * The import operation's scope, which is set to be *absolute*.\r\n * @type {NodeId}\r\n */\r\nconst scopeId = new NodeId(NodeId.NodeIdType.NUMERIC, 0, 0);\r\n\r\n/**\r\n * A stream that imports xml files in parallel.\r\n */\r\nexport default class ImportStream extends CallMethodStream {\r\n  /**\r\n   * Id of the `importNodes` OPC-UA method.\r\n   * @type {NodeId}\r\n   */\r\n  get methodId() {\r\n    return new NodeId('ns=1;s=AGENT.OPCUA.METHODS.importNodes');\r\n  }\r\n\r\n  /**\r\n   * Returns the arguments the `importNodes` needs to be called with for the given file.\r\n   * @param {vinyl~File} file The file being processed.\r\n   * @return {node-opcua~Variant[]} The arguments for the `importNodes` method:\r\n   *  - The import scope (which is set to be absolute)\r\n   *  - The XML code (read from *file*)\r\n   * .\r\n   */\r\n  inputArguments(file) {\r\n    return [\r\n      {\r\n        dataType: DataType.NodeId,\r\n        value: scopeId,\r\n      },\r\n      {\r\n        dataType: DataType.XmlElement,\r\n        value: file.contents,\r\n      },\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * Returns an error message specifically for the given file.\r\n   * @param {vinyl~File} file The file to generate the error message for.\r\n   * @return {string} The specific error message.\r\n   */\r\n  processErrorMessage(file) {\r\n    return `Error importing file: ${file.relative}`;\r\n  }\r\n\r\n  /**\r\n   * Checks if the import succeeded and calls `callback` with an error otherwise.\r\n   * @param {vinyl~File} file The file that was processed.\r\n   * @param {?node-opcua~Variant[]} outputArguments The import status output arguments (Array with a\r\n   * single entry).\r\n   * @param {function(err: ?Error)} callback The callback called with an error if import failed.\r\n   */\r\n  handleOutputArguments(file, outputArguments, callback) {\r\n    const [importStatus] = outputArguments || [{}];\r\n\r\n    if (importStatus.value) {\r\n      Logger.debug(`Successfully imported file: ${file.relative}`);\r\n\r\n      callback(null);\r\n    } else {\r\n      callback(new Error('Import failed'));\r\n    }\r\n  }\r\n}\r\n"],"mappings":";;;;;;AAAA,IAAAA,QAAA,GAAAC,OAAA;AACA,IAAAC,QAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAAG,OAAA,GAAAD,sBAAA,CAAAF,OAAA;AACA,IAAAI,iBAAA,GAAAF,sBAAA,CAAAF,OAAA;AAAkE,SAAAE,uBAAAG,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAElE;AACA;AACA;AACA;AACA,MAAMG,OAAO,GAAG,IAAIC,eAAM,CAACA,eAAM,CAACC,UAAU,CAACC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;;AAE3D;AACA;AACA;AACe,MAAMC,YAAY,SAASC,yBAAgB,CAAC;EACzD;AACF;AACA;AACA;EACE,IAAIC,QAAQA,CAAA,EAAG;IACb,OAAO,IAAIL,eAAM,CAAC,wCAAwC,CAAC;EAC7D;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEM,cAAcA,CAACC,IAAI,EAAE;IACnB,OAAO,CACL;MACEC,QAAQ,EAAEC,iBAAQ,CAACT,MAAM;MACzBU,KAAK,EAAEX;IACT,CAAC,EACD;MACES,QAAQ,EAAEC,iBAAQ,CAACE,UAAU;MAC7BD,KAAK,EAAEH,IAAI,CAACK;IACd,CAAC,CACF;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,mBAAmBA,CAACN,IAAI,EAAE;IACxB,OAAO,yBAAyBA,IAAI,CAACO,QAAQ,EAAE;EACjD;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,qBAAqBA,CAACR,IAAI,EAAES,eAAe,EAAEC,QAAQ,EAAE;IACrD,MAAM,CAACC,YAAY,CAAC,GAAGF,eAAe,IAAI,CAAC,CAAC,CAAC,CAAC;IAE9C,IAAIE,YAAY,CAACR,KAAK,EAAE;MACtBS,gBAAM,CAACC,KAAK,CAAC,+BAA+Bb,IAAI,CAACO,QAAQ,EAAE,CAAC;MAE5DG,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,MAAM;MACLA,QAAQ,CAAC,IAAII,KAAK,CAAC,eAAe,CAAC,CAAC;IACtC;EACF;AACF;AAACC,OAAA,CAAAxB,OAAA,GAAAK,YAAA","ignoreList":[]}