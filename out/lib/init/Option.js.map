{"version":3,"file":"Option.js","names":["InitOption","constructor","messageOrOptions","defaultOrUndefined","undefined","Error","length","type","DefaultType","message","default","choices","validate","when","exports"],"sources":["../../../src/lib/init/Option.js"],"sourcesContent":["/**\r\n * An option the \"atscm init\" command handles.\r\n * TODO: Support function values for name, message, default, choices...\r\n */\r\nexport default class InitOption {\r\n  /**\r\n   * Creates a new option based either on a message and (optionally) a default value or some\r\n   * options.\r\n   * @param {string|Object} messageOrOptions The message or options to use.\r\n   * @param {inquirer~PromptType} [messageOrOptions.type] The option's type.\r\n   * @param {string} messageOrOptions.message The option's message. Required if `messageOrOptions`\r\n   * is an object.\r\n   * @param {string|number} [messageOrOptions.default] The options's default value.\r\n   * @param {inquirer~Validator} [messageOrOptions.validate] A function that validates user input.\r\n   * @param {string[]|number[]} [messageOrOptions.choices] The options's choices. Applies to to list\r\n   * types only.\r\n   * @param {boolean|function(answers: Object): boolean} [messageOrOptions.when] Weather or not to\r\n   * prompt this option.\r\n   * @param {string|number} [defaultOrUndefined] The default value to use.\r\n   */\r\n  constructor(messageOrOptions, defaultOrUndefined) {\r\n    if (messageOrOptions === undefined) {\r\n      throw new Error('message or options required');\r\n    }\r\n\r\n    if (typeof messageOrOptions === 'string') {\r\n      if (messageOrOptions.length === 0) {\r\n        throw new Error('message is required');\r\n      }\r\n\r\n      /**\r\n       * The option's {@link inquirer~PromptType}. Defaults to 'input'.\r\n       * @type {inquirer~PromptType}\r\n       */\r\n      this.type = InitOption.DefaultType;\r\n\r\n      /**\r\n       * The option's message. A '?' sign is added automatically.\r\n       * @type {String}\r\n       */\r\n      this.message = `${messageOrOptions}?`;\r\n\r\n      /**\r\n       * The default value to use.\r\n       * @type {String|Number|undefined}\r\n       */\r\n      this.default = defaultOrUndefined;\r\n    } else {\r\n      if (!messageOrOptions.message || messageOrOptions.length === 0) {\r\n        throw new Error('message is required');\r\n      }\r\n\r\n      this.type = messageOrOptions.type || InitOption.DefaultType;\r\n      this.message = `${messageOrOptions.message}?`;\r\n      this.default = messageOrOptions.default;\r\n\r\n      /**\r\n       * The choices available. Applies to list types only.\r\n       * @type {String[]|Number[]|undefined}\r\n       */\r\n      this.choices = messageOrOptions.choices;\r\n\r\n      /**\r\n       * Validates the user input for this option.\r\n       * @type {inquirer~Validator}\r\n       */\r\n      this.validate = messageOrOptions.validate;\r\n\r\n      /**\r\n       * A function or boolean that indicates weather or not to prompt this option.\r\n       * @type {Boolean|function(answers: Object): Boolean|undefined}\r\n       */\r\n      this.when = messageOrOptions.when;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The default {@link inquirer~PromptType} to use. Equals 'input'.\r\n   * @return {inquirer~PromptType} The default {@link inquirer~PromptType} to use.\r\n   */\r\n  static get DefaultType() {\r\n    return 'input';\r\n  }\r\n}\r\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACe,MAAMA,UAAU,CAAC;EAC9B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,WAAWA,CAACC,gBAAgB,EAAEC,kBAAkB,EAAE;IAChD,IAAID,gBAAgB,KAAKE,SAAS,EAAE;MAClC,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IAEA,IAAI,OAAOH,gBAAgB,KAAK,QAAQ,EAAE;MACxC,IAAIA,gBAAgB,CAACI,MAAM,KAAK,CAAC,EAAE;QACjC,MAAM,IAAID,KAAK,CAAC,qBAAqB,CAAC;MACxC;;MAEA;AACN;AACA;AACA;MACM,IAAI,CAACE,IAAI,GAAGP,UAAU,CAACQ,WAAW;;MAElC;AACN;AACA;AACA;MACM,IAAI,CAACC,OAAO,GAAG,GAAGP,gBAAgB,GAAG;;MAErC;AACN;AACA;AACA;MACM,IAAI,CAACQ,OAAO,GAAGP,kBAAkB;IACnC,CAAC,MAAM;MACL,IAAI,CAACD,gBAAgB,CAACO,OAAO,IAAIP,gBAAgB,CAACI,MAAM,KAAK,CAAC,EAAE;QAC9D,MAAM,IAAID,KAAK,CAAC,qBAAqB,CAAC;MACxC;MAEA,IAAI,CAACE,IAAI,GAAGL,gBAAgB,CAACK,IAAI,IAAIP,UAAU,CAACQ,WAAW;MAC3D,IAAI,CAACC,OAAO,GAAG,GAAGP,gBAAgB,CAACO,OAAO,GAAG;MAC7C,IAAI,CAACC,OAAO,GAAGR,gBAAgB,CAACQ,OAAO;;MAEvC;AACN;AACA;AACA;MACM,IAAI,CAACC,OAAO,GAAGT,gBAAgB,CAACS,OAAO;;MAEvC;AACN;AACA;AACA;MACM,IAAI,CAACC,QAAQ,GAAGV,gBAAgB,CAACU,QAAQ;;MAEzC;AACN;AACA;AACA;MACM,IAAI,CAACC,IAAI,GAAGX,gBAAgB,CAACW,IAAI;IACnC;EACF;;EAEA;AACF;AACA;AACA;EACE,WAAWL,WAAWA,CAAA,EAAG;IACvB,OAAO,OAAO;EAChB;AACF;AAACM,OAAA,CAAAJ,OAAA,GAAAV,UAAA","ignoreList":[]}