{"version":3,"file":"ProjectConfig.js","names":["path","exports","process","env","ATSCM_CONFIG_PATH","Config","require","default","ProjectConfig","_env","name","host","port","opc","parseInt","http","login","username","password","sourceNodeRegExp","_sourceNodeRegExp","_sourceNodesRegExp","RegExp","nodes","map","value","replace","join","ignoredNodesRegExp","_ignoredNodesRegExp","ignoreNodes","isExternal","id","match","timeout"],"sources":["../../src/config/ProjectConfig.js"],"sourcesContent":["/**\r\n * The path to the project's configuration file.\r\n * @type {string}\r\n */\r\nexport const path = process.env.ATSCM_CONFIG_PATH;\r\n\r\n/**\r\n * The current project's configuration.\r\n * @type {Atviseproject}\r\n */\r\nconst Config = require(path).default;\r\n\r\n/**\r\n * The current project's configuration, with overrides (through `ATSCM_PROJECT__` env vars) already\r\n * handled.\r\n */\r\nexport default class ProjectConfig extends Config {\r\n  /**\r\n   * Return the project configuration override for the given name if available.\r\n   * @param {string} name The variable to return.\r\n   * @type {string|undefined} The variables's value or `undefined`.\r\n   */\r\n  static _env(name) {\r\n    return process.env[`ATSCM_PROJECT__${name}`];\r\n  }\r\n\r\n  /**\r\n   * The atvise server's host. Can be overridden with the `ATSCM_PROJECT__HOST` env variable.\r\n   * @type {string}\r\n   */\r\n  static get host() {\r\n    return this._env('HOST') || super.host;\r\n  }\r\n\r\n  /**\r\n   * The atvise server ports to use.\r\n   * @type {Object}\r\n   * @property {number} opc The OPC-UA port the atvise server runs on. Can be overridden with the\r\n   * `ATSCM_PROJECT__PORT__OPC` env variable.\r\n   * @property {number} http The HTTP port the atvise server can be reached at. Can be overridden\r\n   * with the `ATSCM_PROJECT__PORT__HTTP` env variable.\r\n   */\r\n  static get port() {\r\n    return {\r\n      opc: parseInt(this._env('PORT__OPC'), 10) || super.port.opc,\r\n      http: parseInt(this._env('PORT__HTTP'), 10) || super.port.http,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * The login to use. Return false if no login is required (default).\r\n   * @type {Object}\r\n   * @property {string} username The username to log in with. Can be overridden with the\r\n   * `ATSCM_PROJECT__LOGIN__USERNAME` env variable.\r\n   * @property {string} password The password to log in with. Can be overridden with the\r\n   * `ATSCM_PROJECT__LOGIN__PASSWORD` env variable.\r\n   */\r\n  static get login() {\r\n    if (this._env('LOGIN__USERNAME') || this._env('LOGIN__PASSWORD')) {\r\n      return {\r\n        username: this._env('LOGIN__USERNAME') || super.login.username,\r\n        password: this._env('LOGIN__PASSWORD') || super.login.password,\r\n      };\r\n    }\r\n\r\n    return super.login;\r\n  }\r\n\r\n  /**\r\n   * A regular expression matching all source nodes.\r\n   * @type {RegExp};\r\n   */\r\n  static get sourceNodeRegExp() {\r\n    if (!this._sourceNodeRegExp) {\r\n      this._sourceNodesRegExp = new RegExp(\r\n        `^(${this.nodes.map(({ value }) => `${value.replace(/\\./g, '\\\\.')}`).join('|')})`\r\n      );\r\n    }\r\n\r\n    return this._sourceNodesRegExp;\r\n  }\r\n\r\n  /**\r\n   * A regular expression matching all ignored nodes.\r\n   * @type {RegExp};\r\n   */\r\n  static get ignoredNodesRegExp() {\r\n    if (!this._ignoredNodesRegExp) {\r\n      this._ignoredNodesRegExp = new RegExp(\r\n        `^(${this.ignoreNodes.map(({ value }) => `${value.replace(/\\./g, '\\\\.')}`).join('|')})`\r\n      );\r\n    }\r\n\r\n    return this._ignoredNodesRegExp;\r\n  }\r\n\r\n  /**\r\n   * Returns `true` for all external (not in {@link Atviseproject.nodes} or ignored by\r\n   * {@link Atviseproject.ignoreNodes}).\r\n   * @param {string} id The node id to check.\r\n   * @return {boolean} If the node is external.\r\n   */\r\n  static isExternal(id) {\r\n    return !id.match(this.sourceNodeRegExp) || !!id.match(this.ignoredNodesRegExp);\r\n  }\r\n\r\n  /**\r\n   * The connection timeout, in milliseconds. Can be overridden with the `ATSCM_PROJECT__TIMEOUT`\r\n   * env variable.\r\n   * @type {number}\r\n   */\r\n  static get timeout() {\r\n    const env = this._env('TIMEOUT');\r\n    return env ? parseInt(env, 10) : super.timeout;\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]}