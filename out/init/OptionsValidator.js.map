{"version":3,"file":"OptionsValidator.js","names":["_validateNpmPackageName","_interopRequireDefault","require","e","__esModule","default","InitOptionsValidator","name","value","result","validatePackageName","errors","match","validForNewPackages","warnings","exports"],"sources":["../../src/init/OptionsValidator.js"],"sourcesContent":["import validatePackageName from 'validate-npm-package-name';\r\n\r\n/**\r\n * A static class containing validators for the options used when running \"atscm init\".\r\n */\r\nexport default class InitOptionsValidator {\r\n  /**\r\n   * Validates a project name to be a valid npm package name.\r\n   * @param {string} value The name to validate.\r\n   * @return {boolean|string} Returns true if `value` is a valid npm package name, or an error\r\n   * message otherwise.\r\n   */\r\n  static name(value) {\r\n    const result = validatePackageName(value);\r\n\r\n    if (result.errors) {\r\n      return result.errors[0];\r\n    }\r\n\r\n    // First letter must be a letter\r\n    if (value.match(/^@?[a-z]+/i) === null) {\r\n      return 'name must start with a letter';\r\n    }\r\n\r\n    if (value === 'atscm') {\r\n      return \"'atscm' is not allowed\";\r\n    }\r\n\r\n    return result.validForNewPackages ? true : result.warnings[0];\r\n  }\r\n}\r\n"],"mappings":";;;;;;AAAA,IAAAA,uBAAA,GAAAC,sBAAA,CAAAC,OAAA;AAA4D,SAAAD,uBAAAE,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAE5D;AACA;AACA;AACe,MAAMG,oBAAoB,CAAC;EACxC;AACF;AACA;AACA;AACA;AACA;EACE,OAAOC,IAAIA,CAACC,KAAK,EAAE;IACjB,MAAMC,MAAM,GAAG,IAAAC,+BAAmB,EAACF,KAAK,CAAC;IAEzC,IAAIC,MAAM,CAACE,MAAM,EAAE;MACjB,OAAOF,MAAM,CAACE,MAAM,CAAC,CAAC,CAAC;IACzB;;IAEA;IACA,IAAIH,KAAK,CAACI,KAAK,CAAC,YAAY,CAAC,KAAK,IAAI,EAAE;MACtC,OAAO,+BAA+B;IACxC;IAEA,IAAIJ,KAAK,KAAK,OAAO,EAAE;MACrB,OAAO,wBAAwB;IACjC;IAEA,OAAOC,MAAM,CAACI,mBAAmB,GAAG,IAAI,GAAGJ,MAAM,CAACK,QAAQ,CAAC,CAAC,CAAC;EAC/D;AACF;AAACC,OAAA,CAAAV,OAAA,GAAAC,oBAAA","ignoreList":[]}